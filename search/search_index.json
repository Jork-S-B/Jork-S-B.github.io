{"config":{"lang":["en","zh"],"separator":"[\\s\\u200b\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to myblog","text":""},{"location":"docker/build_jenkins/","title":"Build jenkins","text":"<p>docker pull jenkins/jenkins</p>"},{"location":"docker/build_jenkins/#_1","title":"\u521b\u5efa\u200b\u6302\u8f7d\u200b\u76ee\u5f55\u200b\u5e76\u200b\u6388\u6743","text":""},{"location":"docker/build_jenkins/#mkdir-p-varjenkins_node","title":"mkdir -p /var/jenkins_node","text":""},{"location":"docker/build_jenkins/#chmod-777-varjenkins_node","title":"chmod 777 /var/jenkins_node","text":"<p>cd 'F:\\Program Files\\Docker\\share\\my-jenkins'</p>"},{"location":"docker/build_jenkins/#_2","title":"\u542f\u52a8\u200b\u5bb9\u5668\u200b\uff0c\u200b\u6620\u5c04\u200b\u4e3b\u673a\u200b\u7aef\u53e3\u200b\u53ca\u200b\u6302\u8f7d\u200b\u76ee\u5f55","text":"<p>docker run -d --name my-jenkins -p 8088:8080 -p 50000:50000 -v ${pwd}:/var/jenkins_home jenkins/jenkins</p>"},{"location":"docker/build_jenkins/#_3","title":"\u770b\u200b\u521d\u59cb\u5316\u200b\u5bc6\u7801","text":"<p>docker logs -f --tail=200 my-jenkins</p> <p>0fde53a200744d17880f3fba15b3e2a5</p> <p>This may also be found at: /var/jenkins_home/secrets/initialAdminPassword</p> <p>\u200b\u8bbf\u95ee\u200blocalhost:8088/\uff0c\u200b\u7136\u540e\u200b\u8f93\u5165\u200b\u4e0a\u9762\u200b\u8fd9\u4e32\u200b\u5bc6\u7801\u200b\uff0c\u200b\u8fdb\u5165\u200bjenkins\u200b\u5411\u5bfc\u200b\uff0c\u200b\u5b89\u88c5\u200b\u63d2\u4ef6\u200b</p> <p>\u200b\u8fdb\u5165\u200b\u5bb9\u5668\u200b\uff0c\u200b\u6839\u636e\u200b\u6307\u5f15\u200b\u751f\u6210\u200bssh\u200b\u516c\u94a5\u200b</p>"},{"location":"docker/build_mysql/","title":"\u6784\u5efa\u200bMySQL\u200b\u955c\u50cf","text":""},{"location":"docker/build_mysql/#mysql","title":"\ud83d\ude81 \u200b\u6784\u5efa\u200bMySQL\u200b\u955c\u50cf","text":"<p>\u200b\u53c2\u8003\u200b\u7684\u200b\u8fd9\u200b\u4e00\u7bc7\u200b\u535a\u5ba2\u200b</p> Dockerfileinit.sqlmy.conf <pre><code>FROM mysql\nENV MYSQL_ROOT_PASSWORD=123456\nENV LANG=C.UTF-8\nCOPY my.cnf /etc/mysql/my.cnf\nCOPY init.sql /docker-entrypoint-initdb.d/\n\n# \u200b\u6301\u4e45\u200b\u5316\u200b\u6570\u636e\u200b\u5377\u200b\nVOLUME /var/lib/mysql\n</code></pre> <pre><code>CREATE DATABASE mydb;\nUSE mydb;\n\nCREATE TABLE users (\n  id INT(11) NOT NULL AUTO_INCREMENT,\n  name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL,\n  PRIMARY KEY (id)\n);\nINSERT INTO users (name, email) VALUES ('John Doe', 'john@example.com');\nINSERT INTO users (name, email) VALUES ('Jane Doe', 'jane@example.com');\n</code></pre> <pre><code>[mysqld]\ncharacter-set-server=utf8mb4\ncollation-server=utf8mb4_unicode_ci\nmax_connections=100    \n</code></pre> <p>\u200b\u51c6\u5907\u200b\u597d\u200b\u4ee5\u4e0a\u200b\u6587\u4ef6\u200b\u540e\u200b\uff0c\u200b\u5728\u200bWindows PowerShell\u200b\u4e2d\u200b\u6267\u884c\u200bbuild\u200b\u6307\u4ee4\u200b\uff0c\u200b\u6784\u5efa\u200bMySQL\u200b\u955c\u50cf\u200b\u3002</p> <p><code>docker build -t my-mysql .</code></p> <p>\u200b\u8865\u5145\u200b</p> <p>-f  # \u200b\u53ef\u4ee5\u200b\u6307\u5b9a\u200bDockerfile\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b</p>"},{"location":"docker/build_mysql/#_1","title":"\ud83d\ude81 \u200b\u8fd0\u884c\u200b\u5bb9\u5668\u200b\u5e76\u200b\u68c0\u67e5\u200b\u72b6\u6001","text":"<p># \u200b\u8fd0\u884c\u200b\u5bb9\u5668\u200b\uff0c\u200b\u5e76\u200b\u6307\u5b9a\u200b\u7aef\u53e3\u200b\u3001\u200b\u6570\u636e\u200b\u76ee\u5f55\u200b\u6302\u8f7d\u200b\u7b49\u200b\uff1b\u200b\u9996\u6b21\u200b\u6267\u884c\u200b\u9700\u8981\u200b\u521d\u59cb\u5316\u200b\uff0c\u200b\u8bb0\u5f97\u200b\u5173\u6ce8\u200b\u65e5\u5fd7\u200b\u3002</p> <p><code>docker run -d -p 53306:3306 --name my-mysql -v ${pwd}:/var/lib/mysql my-mysql</code></p> <p>\u200b\u8865\u5145\u200b</p> <p>-d  # \u200b\u5b88\u62a4\u200b\u6001\u200b\u8fd0\u884c\u200b\u5bb9\u5668\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u5bb9\u5668\u200b\u7684\u200b\u6301\u4e45\u200b\u5316\u200b\u8fd0\u884c\u200b\uff0c\u200b\u5373\u4f7f\u200b\u7ec8\u7aef\u200b\u5173\u95ed\u200b\u6216\u200b\u4e3b\u673a\u200b\u91cd\u542f\u200b\uff0c\u200b\u5bb9\u5668\u200b\u4ecd\u7136\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u542f\u52a8\u200b\u5e76\u200b\u7ee7\u7eed\u200b\u63d0\u4f9b\u200b\u670d\u52a1\u200b\u3002</p> <p>-v  # ${pwd}\u200b\u4ee3\u8868\u200b\u5f53\u524d\u76ee\u5f55\u200b\uff0c\u200b\u5373\u200b\u628a\u200b\u5f53\u524d\u76ee\u5f55\u200b\u6302\u8f7d\u200b\u5230\u200b\u5bb9\u5668\u200b\u7684\u200b /var/lib/mysql \u200b\u76ee\u5f55\u200b\u3002</p> <p>-v\u200b\u76f4\u63a5\u200b\u8f93\u5165\u200bwindows\u200b\u7684\u200b\u8def\u5f84\u200b\u4f1a\u200b\u62a5\u9519\u200b\uff0c\u200b\u5982\u200b\uff1a</p> <ul> <li>F:\\Program Files\\Docker\\share\\my-mysql  # \u200b\u62a5\u9519\u200b: invalid reference format.</li> <li>F//Program Files/Docker/share/my-mysql  # \u200b\u62a5\u9519\u200b: invalid reference format: repository name must be lowercase.</li> </ul> <p># \u200b\u67e5\u770b\u200b\u5bb9\u5668\u200b\u8fd0\u884c\u200b\u72b6\u6001\u200b\uff0c\u200b\u627e\u5230\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5bb9\u5668\u200bID</p> <p><code>docker ps -a</code></p> <p># \u200b\u8fdb\u5165\u200b\u5bb9\u5668\u200b</p> <p><code>docker exec -it [container_id] sh</code></p> <p># \u200b\u6b64\u65f6\u200b\u82e5\u200b\u5bb9\u5668\u200b\u6b63\u5e38\u200b\u8fd0\u884c\u200b\uff0c\u200b\u8f93\u5165\u200b\u6307\u4ee4\u200b<code>mysql -p mydb</code>\u200b\u53ca\u200b\u5bc6\u7801\u200b\u5373\u53ef\u200b\u8fde\u200b\u4e0a\u200b\u6570\u636e\u5e93\u200b\u3002</p>"},{"location":"docker/build_mysql/#_2","title":"\ud83d\ude81 \u200b\u5176\u4ed6\u200b\u6307\u4ee4\u200b\u8865\u5145","text":"\u547d\u4ee4\u200b \u200b\u8bf4\u660e\u200b <code>docker start [container_id]</code> \u200b\u542f\u52a8\u200b\u5bb9\u5668\u200b <code>docker stop [container_id]</code> \u200b\u505c\u7528\u200b\u5bb9\u5668\u200b <code>docker restart [container_id]</code> \u200b\u91cd\u542f\u200b\u5bb9\u5668\u200b <code>docker logs -f --tail=200 [container_id]</code> \u200b\u65e5\u5fd7\u200b\u5c3e\u90e8\u200b200\u200b\u884c\u200b\u5e76\u200b\u6301\u7eed\u200b\u5237\u65b0"},{"location":"docker/build_mysql/#todo","title":"todo\uff0c\u200b\u589e\u91cf\u200b\u955c\u50cf","text":""},{"location":"docker/build_oracle/","title":"\u6784\u5efa\u200bOracle\u200b\u955c\u50cf","text":""},{"location":"docker/build_oracle/#19c","title":"\ud83d\ude81 \u200b\u6784\u5efa\u200b19C\u200b\u955c\u50cf","text":"<p>\u200b\u53c2\u8003\u200b\u7684\u200b\u8fd9\u200b\u4e00\u7bc7\u200b\u535a\u5ba2\u200b</p> <p>\u200b\u51c6\u5907\u200b\u597d\u200bDockerfile\uff0c\u200b\u6784\u5efa\u200b\u955c\u50cf\u200b\u5e76\u200b\u8fd0\u884c\u200b\u5bb9\u5668\u200b\u300219C\u200b\u955c\u50cf\u200b\u9700\u8981\u200b2G\u200b\u4ee5\u4e0a\u200b\u78c1\u76d8\u7a7a\u95f4\u200b\uff0cpull\u200b\u548c\u200b\u9996\u6b21\u200b\u8fd0\u884c\u200b\u90fd\u200b\u9700\u8981\u200b\u4e00\u6bb5\u65f6\u95f4\u200b\u3002</p> Dockerfile_Oracle\u200b\u6267\u884c\u547d\u4ee4\u200bterminal <pre><code>FROM registry.cn-hangzhou.aliyuncs.com/zhuyijun/oracle:19c\n# \u200b\u6570\u636e\u5e93\u200b\u5b9e\u4f8b\u200b\nENV ORACLE_SID=ORCLCDB\n# \u200b\u591a\u200b\u79df\u6237\u200b\u67b6\u6784\u200b\u4e0b\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5bb9\u5668\u200b\u6570\u636e\u5e93\u200b\nENV ORACLE_PDB=ORCLPDB1\nENV ORACLE_PWD=123456\nENV ORACLE_EDITION=standard\nENV ORACLE_CHARACTERSET=AL32UTF8\n\n# \u200b\u6301\u4e45\u200b\u5316\u200b\u6570\u636e\u200b\u5377\u200b\nVOLUME /opt/oracle/oradata\n</code></pre> <pre><code>docker build -f Dockerfile_Oracle -t my-oracle .\n# \u200b\u6ce8\u610f\u200b\u5f53\u524d\u200b\u8def\u5f84\u200b\ndocker run -d -p 49524:1521 -p 55502:5500 --name my-19c -v ${pwd}:/opt/oracle/oradata my-oracle\n</code></pre> <pre><code>--\u200b\u90e8\u7f72\u200b\u5b8c\u6210\u200b\u540e\u200b\u7528\u200bsqlplus\u200b\u68c0\u67e5\u200b\u670d\u52a1\u200b\u662f\u5426\u200b\u6b63\u5e38\u200b\u8fd0\u884c\u200b\n--\u200b\u6700\u9ad8\u200b\u6743\u9650\u200b\u7684\u200b SYS \u200b\u7528\u6237\u200b\u767b\u5f55\u200b\nsqlplus / as sysdba\n</code></pre>"},{"location":"docker/build_oracle/#pdb","title":"\ud83d\ude81 \u200b\u5728\u200b\u6307\u5b9a\u200bpdb\u200b\u4e2d\u200b\u521b\u5efa\u200b\u7528\u6237","text":"terminalsqlplus <pre><code>--\u200b\u6700\u9ad8\u200b\u6743\u9650\u200b\u7684\u200b SYS \u200b\u7528\u6237\u200b\u767b\u5f55\u200b\nsqlplus / as sysdba\n</code></pre> <pre><code>--\u200b\u786e\u4fdd\u200b\u5df2\u200b\u8fde\u63a5\u200b\u5230\u200bORCLPDB1\uff08Dockerfile\u200b\u914d\u7f6e\u200b\u7684\u200bORACLE_PDB\uff09\nALTER SESSION SET CONTAINER = ORCLPDB1;\n\n--\u200b\u5728\u200bORCLPDB1\u200b\u4e2d\u200b\u521b\u5efa\u200b\u7528\u6237\u200bWHM\nCREATE USER WHM IDENTIFIED BY WHM;\n\n--\u200b\u4e3a\u200b\u7528\u6237\u200b\u5206\u914d\u200b\u9ed8\u8ba4\u200b\u8868\u200b\u7a7a\u95f4\u200b\u548c\u200b\u4e34\u65f6\u200b\u8868\u200b\u7a7a\u95f4\u200b\uff08\u200b\u5047\u8bbe\u200busers\u200b\u662f\u200b\u9ed8\u8ba4\u200b\u8868\u200b\u7a7a\u95f4\u200b\uff0ctemp\u200b\u662f\u200b\u4e34\u65f6\u200b\u8868\u200b\u7a7a\u95f4\u200b\uff09\nALTER USER WHM DEFAULT TABLESPACE users QUOTA UNLIMITED ON users CONTAINER = CURRENT;\nALTER USER WHM TEMPORARY TABLESPACE temp CONTAINER = CURRENT;\n\n--\u200b\u6388\u6743\u200b\uff0c\u200b\u6388\u4e88\u200b\u7528\u6237\u200b\u5728\u200b\u5f53\u524d\u200bPDB\u200b\u4e2d\u200b\u7684\u200b\u6743\u9650\u200b\nGRANT create user, drop user, alter user TO WHM CONTAINER = CURRENT;\nGRANT create any view, connect, resource, dba TO WHM CONTAINER = CURRENT;\nGRANT create session, create any sequence TO WHM CONTAINER = CURRENT;\n\nCOMMIT;\n\n--\u200b\u64a4\u9500\u200b\u6388\u6743\u200b\u5219\u200b\u662f\u200b\n--REVOKE SELECT, UPDATE, INSERT, DELETE ON TABLE_NAME FROM WHM;\n</code></pre> <p>\u200b\u8865\u5145\u200b</p> <p>12c\u200b\u53ca\u200b\u66f4\u200b\u9ad8\u200b\u7248\u672c\u200b\uff0c\u200b\u82e5\u8981\u200b\u5efa\u200b\u516c\u5171\u200b\u7528\u6237\u200b\uff0c\u200b\u5219\u200b\u7528\u6237\u540d\u200b\u9700\u8981\u200b\u4ee5\u200bC##\u200b\u5f00\u5934\u200b+username\u200b\u547d\u540d\u200b\u3002</p>"},{"location":"docker/build_oracle/#oracledb","title":"\ud83d\ude81 \u200b\u5728\u200b\u5bbf\u4e3b\u673a\u200b\u4f7f\u7528\u200boracledb\u200b\u8fde\u63a5","text":"dbutil.py <pre><code>import oracledb\n\n\nclass DBUtil:\n    def __init__(self):\n        self.conn = oracledb.connect(r'WHM/WHM@127.0.0.1:49524/ORCLPDB1')\n        self.cursor = self.conn.cursor()\n\n    def select_data(self, sql: str) -&gt; list:\n        # SQL\u200b\u8bed\u53e5\u200b\u53bb\u6389\u200b\u5206\u200b\u53f7\u200b\uff0c\u200b\u5426\u5219\u200b\u62a5\u9519\u200bORA-00911\n        if sql.strip().endswith(';'):\n            sql = sql.strip()[:-1]\n        rows = self.cursor.execute(sql).fetchall()\n        return rows\n\n    def db_close(self):\n        self.cursor.close()\n        self.conn.close()\n\n\nif __name__ == '__main__':\n    mydb = DBUtil()\n    sql = 'select sysdate from dual'\n    print(mydb.select_data(sql))\n    mydb.db_close()\n</code></pre> <p>\u200b\u63a7\u5236\u53f0\u200b\u6253\u5370\u200b\uff1a[(datetime.datetime(2024, 1, 15, 14, 7, 23),)]\uff0c\u200b\u6ca1\u200b\u5f97\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"docker/windows_docker/","title":"Docker for Windows","text":""},{"location":"docker/windows_docker/#docker-for-windows","title":"\ud83d\ude81 Docker for Windows","text":"<p>\u200b\u5df2\u77e5\u200bDocker\u200b\u4f9d\u8d56\u4e8e\u200blinux\u200b\u5185\u6838\u200b\u73af\u5883\u200b\uff0c\u200b\u4f46\u200b\u603b\u6709\u200b\u5927\u200b\u51a4\u79cd\u200b\uff08\u200b\u4e5f\u200b\u5c31\u662f\u200b\u6211\u200b\ud83d\ude13\uff09\u200b\u60f3\u200b\u5728\u200bWindows 10\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u4e2d\u200b\u90e8\u7f72\u200b\u3002</p> <p>\u200b\u53c2\u8003\u8d44\u6599\u200b\uff1aWindow Docker\u200b\u5b89\u88c5\u200b\u6559\u7a0b\u200b</p> <p>\u200b\u5b89\u88c5\u200b\u6559\u7a0b\u200b\u7b2c\u4e00\u6b65\u200b\u662f\u200b\u5b89\u88c5\u200b\u5e76\u200b\u5f00\u542f\u200bHyper-V\uff0c\u200b\u4f46\u200b\u6211\u200b\u5e76\u672a\u200b\u6267\u884c\u200b\u8fd9\u200b\u4e00\u6b65\u200b\uff08\u200b\u6839\u636e\u200b\u63d0\u4f9b\u200b\u7684\u200b\u6b65\u9aa4\u200b\u67e5\u770b\u200b\u4e5f\u200b\u672a\u200b\u542f\u7528\u200bHyper-V\uff09\uff0c\u200b\u800c\u662f\u200b\u76f4\u63a5\u200b\u5728\u200b\u5b98\u7f51\u200b\u4e0b\u8f7d\u200b\u4e86\u200b\u5b89\u88c5\u5305\u200b\uff0c\u200b\u4f46\u200b\u5b89\u88c5\u200b\u65f6\u200b\u63d0\u793a\u200b\u7cfb\u7edf\u200b\u7248\u672c\u200b\u592a\u4f4e\u200b\u3002</p> <p>\u200b\u66f4\u65b0\u200b\u5b8c\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u540e\u200b\u4fbf\u200b\u5b89\u88c5\u200b\u6210\u529f\u200b\uff0c\u200b\u672a\u200b\u53d1\u73b0\u200bHyper-V\u200b\u6216\u200bWSL 2\u200b\u7b49\u200b\u5bfc\u81f4\u200b\u9519\u8bef\u200b\uff0cdocker\u200b\u6307\u4ee4\u200b\u5728\u200bPowerShell\u200b\u4e2d\u200b\u6267\u884c\u200b\u4e5f\u200b\u6b63\u5e38\u200b\uff0c\u200b\u53ea\u80fd\u200b\u4e0d\u200b\u6392\u9664\u200b\u6f5c\u5728\u200b\u5176\u4ed6\u200b\u7684\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"docker/windows_docker/#hyper-v","title":"\ud83d\ude81 \u200b\u542f\u7528\u200bHyper-V\u200b\u540e\u200b\u8fd0\u884c\u200b\u5bb9\u5668\u200b\u63d0\u793a\u200b\u7aef\u53e3\u200b\u4e0d\u53ef\u200b\u7528","text":"<p>\u200b\u4e3a\u4e86\u200b\u907f\u514d\u200b\u4e00\u4e9b\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u9519\u8bef\u200b\uff0c\u200b\u540e\u6765\u200b\u8fd8\u662f\u200b\u542f\u7528\u200b\u4e86\u200bHyper-V\uff0c\u200b\u6b64\u65f6\u200b\u518d\u200bDocker run container\u200b\u65f6\u62a5\u200b\u9519\u200b\u3002</p> <p>Error: (HTTP code 500) server error - Ports are not available: listen tcp 0.0.0.0:xxxx: bind: An attempt was made to access a socket in a way forbidden by access permissions.</p> <p>\u200b\u89e3\u51b3\u65b9\u6848\u200b\uff1a</p> <p>\u200b\u8bbe\u7f6e\u200b\u201cTCP \u200b\u52a8\u6001\u200b\u7aef\u53e3\u200b\u8303\u56f4\u200b\u201d\uff0c\u200b\u4ee5\u4fbf\u200b Hyper-V \u200b\u53ea\u200b\u4fdd\u7559\u200b\u6211\u4eec\u200b\u8bbe\u7f6e\u200b\u7684\u200b\u8303\u56f4\u200b\u5185\u200b\u7684\u200b\u7aef\u53e3\u200b\u3002</p> <p>\u200b\u4ee5\u200b\u7ba1\u7406\u5458\u200b\u6743\u9650\u200b\u8fd0\u884c\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\uff0c\u200b\u5c06\u200b\u201cTCP \u200b\u52a8\u6001\u200b\u7aef\u53e3\u200b\u8303\u56f4\u200b\u201d\u200b\u91cd\u7f6e\u200b\u4e3a\u200b 49152\u201365535\uff0cDocker\u200b\u4fbf\u200b\u53ef\u200b\u4f7f\u7528\u200b\u8be5\u200b\u8303\u56f4\u200b\u5185\u200b\u7684\u200b\u7aef\u53e3\u200b\u3002</p> <pre><code>netsh int ipv4 set dynamic tcp start=49152 num=16384\nnetsh int ipv6 set dynamic tcp start=49152 num=16384\n</code></pre> <p>\u200b\u53c2\u8003\u8d44\u6599\u200b\uff1a\u200b\u9519\u8bef\u200b\u539f\u56e0\u200b\u5206\u6790\u200b</p>"},{"location":"other/nginx_notes/","title":"Nginx\u200b\u7b14\u8bb0","text":"<ul> <li>\u200b\u9ad8\u6027\u80fd\u200b\u3001\u200b\u5f00\u6e90\u200b\u7684\u200bWeb\u200b\u670d\u52a1\u5668\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u4f5c\u200b\u53cd\u5411\u200b\u4ee3\u7406\u670d\u52a1\u5668\u200b\u3001\u200b\u8d1f\u8f7d\u200b\u5747\u8861\u5668\u200b\u548c\u200bHTTP\u200b\u7f13\u5b58\u200b\u3002</li> <li>\u200b\u652f\u6301\u200b\u591a\u79cd\u200b\u534f\u8bae\u200b\uff0c\u200b\u5305\u62ec\u200bHTTP\u3001HTTPS\u3001SMTP\u3001POP3\u200b\u548c\u200bIMAP\u200b\u7b49\u200b\uff0c\u200b\u5e76\u4e14\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6a21\u5757\u5316\u200b\u7684\u200b\u7ed3\u6784\u200b\u6765\u200b\u6269\u5c55\u200b\u5176\u200b\u529f\u80fd\u200b\u3002</li> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u5360\u7528\u200b\u8d44\u6e90\u200b\u5c11\u200b\u3001\u200b\u7a33\u5b9a\u6027\u200b\u9ad8\u200b\u3001\u200b\u5e76\u53d1\u200b\u80fd\u529b\u200b\u5f3a\u200b\u7b49\u200b\u3002</li> <li>\u200b\u7528\u9014\u200b\uff0c\u200b\u5e7f\u6cdb\u5e94\u7528\u200b\u4e8e\u200b\u4e92\u8054\u7f51\u200b\u9886\u57df\u200b\u3002\u200b\u7279\u522b\u200b\u662f\u200b\u9ad8\u200b\u5e76\u53d1\u200b\u3001\u200b\u5927\u200b\u6d41\u91cf\u200b\u7684\u200b\u7f51\u7ad9\u200b\u548c\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u3002</li> </ul>"},{"location":"other/nginx_notes/#nginx","title":"Nginx\u200b\u5e38\u7528\u200b\u6307\u4ee4","text":"\u6307\u4ee4\u200b \u200b\u8bf4\u660e\u200b start nginx \u200b\u542f\u52a8\u200b\u670d\u52a1\u200b nginx -s reopen \u200b\u91cd\u542f\u200b\u670d\u52a1\u200b nginx -s reload \u200b\u91cd\u65b0\u200b\u52a0\u8f7d\u200b\u914d\u7f6e\u200b\u5e76\u200b\u91cd\u542f\u200b\u670d\u52a1\u200b nginx -s stop \u200b\u5f3a\u5236\u200b\u505c\u6b62\u200b\u670d\u52a1\u200b nginx -s quit \u200b\u5904\u7406\u200b\u5b8c\u200b\u6240\u6709\u200b\u8bf7\u6c42\u200b\u540e\u200b\u9000\u51fa\u200b\u670d\u52a1\u200b nginx -V \u200b\u6253\u5370\u200b\u7248\u672c\u4fe1\u606f"},{"location":"other/nginx_notes/#html","title":"\u90e8\u7f72\u200bhtml\u200b\u7f51\u9875","text":"<p>\u200b\u8bbe\u7f6e\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u542f\u52a8\u200b\u670d\u52a1\u200b\uff0c\u200b\u4fee\u6539\u200b\u524d\u200b\u8bb0\u5f97\u200b\u5907\u4efd\u200b\u3002</p> nginx.conf <pre><code># \u200b\u4ee5\u4e0a\u200b\u7684\u200b\u5185\u5bb9\u200b\u7701\u7565\u200b \n# \u200b\u865a\u62df\u4e3b\u673a\u200b\u914d\u7f6e\u200b\nserver {\n    listen       {\u200b\u81ea\u200b\u5b9a\u200b\u7aef\u53e3\u53f7\u200b};\n    server_name  {\u200b\u672c\u200b\u673a\u200bip};\n\n    location / {\n        root   {\u200b\u9759\u6001\u200b\u7f51\u9875\u200b\u8def\u5f84\u200b};\n        index  index.html;\n\n        \uff03 \u200b\u4ec5\u200b\u5141\u8bb8\u200b\u6307\u5b9a\u200bip\u200b\u8bbf\u95ee\u200b\n        allow {\u200b\u67d0\u4e2a\u200bip\u200b\u5730\u5740\u200b};\n        deny all;\n    }\n\n    error_page 500 502 503 504 /50x.html;\n    location = /50x.html. {\n        root html;\n    }\n    # todo,location\u3001upstream\uff08\u200b\u8d1f\u8f7d\u200b\u5747\u8861\u200b\uff09\n}\n</code></pre>"},{"location":"python/other/mkdocs_notes/","title":"mkdocs\u200b\u4f7f\u7528\u200b\u8bb0\u5f55","text":"<p>mkdocs\uff1a\u200b\u57fa\u4e8e\u200bPython\u200b\u7684\u200b\u6587\u6863\u200b\u751f\u6210\u200b\u5de5\u5177\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5feb\u901f\u200b\u3001\u200b\u7b80\u5355\u200b\u7684\u200b\u751f\u6210\u200b\u7f51\u7ad9\u200b\u3002</p>"},{"location":"python/other/mkdocs_notes/#mkdocs_1","title":"\ud83d\udccc mkdocs\u200b\u5e38\u7528\u547d\u4ee4","text":"\u547d\u4ee4\u200b \u200b\u8bf4\u660e\u200b <code>mkdocs new</code> \u200b\u751f\u6210\u200b\u7ad9\u70b9\u200b\u76ee\u5f55\u200b\u53ca\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff1b\u200b\u5982\u200b\u5df2\u7ecf\u200b\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u76ee\u5f55\u200b\u53ef\u4ee5\u200b\u4e0d\u7528\u200b\u6267\u884c\u200b <code>mkdocs serve -a ip:port</code> \u200b\u5728\u200b\u672c\u5730\u200b\u8fd0\u884c\u200b\uff0c\u200b\u9884\u89c8\u200b\u751f\u6210\u200b\u7684\u200bhtml\uff1b\u200b\u9ed8\u8ba4\u200b8000\u200b\u7aef\u53e3\u200b <code>mkdocs build</code> md\u200b\u8f6c\u200bhtml\u200b\u6587\u4ef6\u200b\uff0c\u200b\u751f\u6210\u200b\u7684\u200b\u6587\u4ef6\u200b\u5728\u200b./site\u200b\u76ee\u5f55\u200b\u4e0b\u200b <p>Tip</p> <p>\u200b\u9700\u8981\u200b\u5148\u200bcd\u200b\u81f3\u200b\u5b58\u653e\u200bmkdocs.yml\u200b\u7684\u200b\u76ee\u5f55\u200b</p>"},{"location":"python/other/mkdocs_notes/#material-for-mkdocs","title":"\ud83d\udccc Material for MkDocs","text":"<p>\u200b\u70b9\u51fb\u200b\u8fd9\u91cc\u200b\u8df3\u8f6c\u200b\u81f3\u200b\u5b98\u65b9\u200b\u4f7f\u7528\u200b\u6587\u6863\u200b</p> <p>mkcocs-material\u200b\u662f\u200bmkdocs\u200b\u7684\u200b\u4e3b\u9898\u200b\u4e4b\u4e00\u200b \uff0c\u200b\u5728\u200bmkdocs.yml\u200b\u4e2d\u200b\u914d\u7f6e\u200b\u3002\u200b\u4e0b\u5217\u200b\u662f\u200b\u53ef\u80fd\u200b\u6709\u7528\u200b\u7684\u200b\u7ec4\u4ef6\u200b\u793a\u4f8b\u200b\u3002</p> <p>mkdocs\u200b\u7f16\u5199\u200b\u7684\u200b\u6587\u6863\u200b\u63d0\u4ea4\u200b\u5230\u200bgithub\u200b\u540e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200bgithub action\u200b\u90e8\u7f72\u200b\u5230\u200bgithub page\u3002</p>"},{"location":"python/other/mkdocs_notes/#tab","title":"\ud83d\ude81 \u200b\u5e26\u200btab\u200b\u9875\u200b\u7684\u200b\u4ee3\u7801\u200b\u5757","text":"\u9884\u89c8\u200bmkdocs.yml\u200b\u914d\u7f6e\u200bcode.md <pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre> <pre><code>markdown_extensions:\n    # \u200b\u53ef\u200b\u5207\u6362\u200btab\u200b\u9875\u200b\u7684\u200b\u4ee3\u7801\u200b\u5757\u200b\u6269\u5c55\u200b\n    - pymdownx.superfences\n    - pymdownx.tabbed:\n        alternate_style: true\n</code></pre> <pre><code>=== \"Hello world!\"\n\n    ``` c++\n    #include &lt;iostream&gt;\n\n    int main(void) {\n      std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n      return 0;\n    }\n    ```\n</code></pre>"},{"location":"python/other/mkdocs_notes/#tab_1","title":"\ud83d\ude81 \u200b\u5e26\u200btab\u200b\u9875\u200b\u7684\u200b\u63d0\u793a\u6846","text":"<p>\u200b\u793a\u4f8b\u200b</p> \u200b\u793a\u4f8b\u200b1-\u200b\u65e0\u200b\u5e8f\u5217\u200b\u8868\u793a\u200b\u4f8b\u200b2-\u200b\u65e0\u5e8f\u200b\u5217\u8868\u200bmkdocs.yml\u200b\u914d\u7f6e\u200bcode.md <pre><code>* Sed sagittis eleifend rutrum\n* Donec vitae suscipit est\n* Nulla tempor lobortis orci\n</code></pre> <pre><code>1. Sed sagittis eleifend rutrum\n2. Donec vitae suscipit est\n3. Nulla tempor lobortis orci\n</code></pre> <pre><code>markdown_extensions:\n    # \u200b\u53ef\u200b\u5207\u6362\u200btab\u200b\u9875\u200b\u7684\u200b\u4ee3\u7801\u200b\u5757\u200b\u6269\u5c55\u200b\n    - pymdownx.superfences\n    - pymdownx.tabbed:\n        alternate_style: true\n    # \u200b\u63d0\u793a\u6846\u200b\u6269\u5c55\u200b\n    - admonition\n    - pymdownx.details\n    - pymdownx.superfences\n</code></pre> <pre><code>!!! example \"\u200b\u793a\u4f8b\u200b\"\n\n    === \"\u200b\u793a\u4f8b\u200b1-\u200b\u65e0\u5e8f\u200b\u5217\u8868\u200b\"\n\n        ``` markdown\n        * Sed sagittis eleifend rutrum\n        * Donec vitae suscipit est\n        * Nulla tempor lobortis orci\n        ```\n\n    === \"\u200b\u793a\u4f8b\u200b2-\u200b\u65e0\u5e8f\u200b\u5217\u8868\u200b\"\n\n        ``` markdown\n        1. Sed sagittis eleifend rutrum\n        2. Donec vitae suscipit est\n        3. Nulla tempor lobortis orci\n        ```\n</code></pre>"},{"location":"python/other/mkdocs_notes/#_1","title":"\ud83d\ude81 \u200b\u9ed8\u8ba4\u200b\u6298\u53e0\u200b\u5c55\u793a\u200b\u7684\u200b\u63d0\u793a\u6846","text":"\u793a\u4f8b\u200b \u200b\u793a\u4f8b\u200bcode.md <p>\u200b\u63d0\u793a\u6846\u200b\u7c7b\u578b\u200b\u8fd8\u6709\u200bnote\u3001tip\u3001success\u3001fail\u3001question\u3001warning\u200b\u7b49\u200b\u3002</p> <p>\u200b\u53c2\u8003\u8d44\u6599\u200b\uff1amkdocs-material\u200b\u5b98\u65b9\u200b\u4f7f\u7528\u200b\u6587\u6863\u200b\u793a\u4f8b\u200b</p> <pre><code>??? question\n\n    \u200b\u63d0\u793a\u6846\u200b\u7c7b\u578b\u200b\u8fd8\u6709\u200bnote\u3001tip\u3001success\u3001fail\u3001question\u3001warning\u200b\u7b49\u200b\u3002\n</code></pre>"},{"location":"python/other/mkdocs_notes/#emoji","title":"\ud83d\ude81 \u200b\u6b63\u6587\u200b\u4e2d\u200b\u4f7f\u7528\u200bemoji\u200b\u8868\u60c5","text":"\u793a\u4f8b\u200bmkdocs.yml\u200b\u914d\u7f6e\u200bcode.md <p>\u200b\u5b98\u7f51\u200b\u4f7f\u7528\u200b\u6587\u6863\u200b \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u56fe\u6807\u200b\u3001emoji\u200b\u8868\u60c5\u200b\u7684\u200b\u641c\u7d22\u200b\u529f\u80fd\u200b</p> <pre><code>markdown_extensions:\n# emoji\u200b\u7b49\u200b\u56fe\u6807\u200b\u7684\u200b\u6269\u5c55\u200b\n- attr_list\n- pymdownx.emoji:\n    emoji_index: !!python/name:material.extensions.emoji.twemoji\n    emoji_generator: !!python/name:material.extensions.emoji.to_svg\n</code></pre> <pre><code>:heart:\n:smile:\n:laughing:\n:blush:\n:smiley:\n:relaxed:\n:smirk:\n:heart_eyes:\n:kissing_heart:\n:kissing_closed_eyes:\n:flushed:\n:relieved:\n:satisfied:\n:grin:\n:wink:\n</code></pre>"},{"location":"python/other/mkdocs_notes/#github-page","title":"\ud83d\udccc \u200b\u90e8\u7f72\u200b\u5230\u200bgithub page","text":"<p>1.\u200b\u9879\u76ee\u200b\u6839\u76ee\u5f55\u200b\u4e0b\u5efa\u200b./github/workflows/xxx.yml\u200b\u6587\u4ef6\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u5de5\u4f5c\u200b\u6d41\u200b\uff0c\u200b\u8868\u793a\u200b\u6301\u7eed\u200b\u96c6\u6210\u200b\u6267\u884c\u200b\u7684\u200b\u4efb\u52a1\u200b\u3002\u200b\u5185\u5bb9\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>name: blog_ci\non:\n  push:\n    branches:\n      - master\n      - main\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout master\n        uses: actions/checkout@v2\n        with:\n          fetch-depth: 0  # \u200b\u9ed8\u8ba4\u200b\u4e3a\u200b1\uff0c\u200b\u53ea\u53d6\u200b\u6700\u8fd1\u200b\u7684\u200b1\u200b\u4e2a\u200b\u63d0\u4ea4\u200b\uff0c\u200b\u5bfc\u81f4\u200b\u65e0\u6cd5\u200b\u83b7\u53d6\u200b\u5230\u200b\u6bcf\u4e2a\u200b\u6587\u4ef6\u200b\u7684\u200b\u6700\u540e\u200b\u4fee\u6539\u200b\u65f6\u95f4\u200b\n\n      - name: Set up Python3.x\n        uses: actions/setup-python@v2\n        with:\n          python-version: 3.x\n\n      - run: pip install mkdocs\n      - run: pip install mkdocs-material\n      - run: pip install mkdocs-glightbox\n      - run: pip install jieba\n      - run: pip install mkdocs-git-revision-date-localized-plugin\n\n      - name: Deploy\n        run: mkdocs gh-deploy --force\n</code></pre> <p>2.\u200b\u5728\u200bGitHub\u200b\u4ed3\u5e93\u200b\u9875\u200b\uff0c\u200b\u8fdb\u5165\u200b\u8def\u5f84\u200b\uff1a<code>Settings</code>-&gt;<code>Actions</code>-&gt;<code>General</code> \uff0c</p> <p>\u200b\u5c06\u200b<code>Workflow Permissions</code>\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b<code>Read an write permissions</code>\uff0c\u200b\u70b9\u51fb\u200b<code>Save</code>\u200b\u4fdd\u5b58\u200b\u3002</p> <p></p> <p>3.\u200b\u4e4b\u540e\u200bpush\u200b\u4ee3\u7801\u200b\u65f6\u200b\u4fbf\u200b\u4f1a\u200b\u89e6\u53d1\u200b\u5de5\u4f5c\u200b\u6d41\u200b\uff0c\u200b\u8fd0\u884c\u200b\u6210\u529f\u200b\u540e\u200b\u8bbf\u95ee\u200b<code>https://{username}.github.io</code>\u200b\u5373\u53ef\u200b\u67e5\u770b\u200b\u3002</p> <p>\u200b\u53c2\u8003\u8d44\u6599\u200b\uff1aQuickstart for GitHub Actions</p>"},{"location":"python/other/mv_py_path/","title":"Python\u200b\u8def\u5f84\u200b\u8fc1\u79fb","text":"<p>\u200b\u5728\u200bwindows\u200b\u7cfb\u7edf\u200b\u5b89\u88c5\u200bpython3.11\u200b\u65f6\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u5b89\u88c5\u200b\u5728\u200b<code>C:\\Users\\\u200b\u7528\u6237\u540d\u200b\\AppData\\Local\\Programs\\Python\\Python311\\</code>\u3002</p> <p>\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u5c06\u200bpython3.11\u200b\u8fc1\u79fb\u200b\u5230\u200b\u5176\u4ed6\u200b\u76d8\u7b26\u200b\uff0c\u200b\u5982\u200bD\u200b\u76d8\u200b\uff0c\u200b\u5219\u200b\u9700\u8981\u200b\u5982\u4e0b\u200b\u6b65\u9aa4\u200b\uff1a</p> <ol> <li> <p>\u200b\u5c06\u200bpython3.11\u200b\u8def\u5f84\u200b\u79fb\u52a8\u200b\u5230\u200bD\u200b\u76d8\u200b\uff0c\u200b\u5e76\u200b\u4fee\u6539\u200b\u73af\u5883\u53d8\u91cf\u200bPATH\u3002</p> </li> <li> <p>\u200b\u6b64\u65f6\u200bpip -V \u200b\u4e0d\u53ef\u200b\u7528\u200b\uff0c\u200b\u4f46\u200b\u5378\u8f7d\u200b\u540e\u200b\u91cd\u88c5\u200b\u5373\u53ef\u200b\u3002 <pre><code>python -m pip uninstall -y pip\n# \u200b\u901a\u8fc7\u200b\u4ee5\u4e0b\u200b\u94fe\u63a5\u200b\u5b89\u5168\u200b\u4e0b\u8f7d\u200bget-pip.py\ncurl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\npython get-pip.py\n</code></pre> \u200b\u53c2\u8003\u200b\u94fe\u63a5\u200b</p> </li> <li> <p>\u200b\u8fc1\u79fb\u200b\u524d\u200b\u5df2\u200b\u5b89\u88c5\u200b\u7684\u200b\u5e93\u200b\uff0c\u200b\u4e5f\u200b\u9700\u8981\u200b\u91cd\u65b0\u5b89\u88c5\u200b\u4e00\u904d\u200b\u3002 <pre><code>pip freeze &gt; requirements.txt  # \u200b\u5bfc\u51fa\u200b\u5df2\u200b\u5b89\u88c5\u200b\u7684\u200b\u5e93\u200b\npip uninstall -y -r requirements.txt\npip install -r requirements.txt\n</code></pre></p> </li> </ol>"},{"location":"python/pydocx/pydocx_notes/","title":"pydocx\u200b\u7b14\u8bb0","text":""},{"location":"python/pydocx/pydocx_notes/#_1","title":"\u6587\u6863\u200b\u5185\u5bb9","text":"<p>\u200b\u5148\u5efa\u4e2a\u200bword\u200b\u6587\u6863\u200b\uff0c\u200b\u5e76\u200b\u4fdd\u5b58\u200b\u4e3a\u200b<code>./output.docx</code>\u3002</p> make_doc.py\u200b\u751f\u6210\u200b\u6587\u6863\u200b\u7684\u200b\u5185\u5bb9\u200b <pre><code>from docx import Document\nfrom docx.shared import Inches\n\n\ndef add_table(doc):\n    \"\"\"\u200b\u5411\u200bword\u200b\u6587\u6863\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u8868\u683c\u200b\"\"\"\n    table = doc.add_table(rows=3, cols=3, style='Table Grid')\n    # \u200b\u586b\u5145\u200b\u8868\u683c\u200b\u6570\u636e\u200b\n    row_count = 0\n    for row in table.rows:\n        col_count = 0\n        for cell in row.cells:\n            if row_count == 0:  # \u200b\u7b2c\u4e00\u884c\u200b\u52a0\u200bheader\n                cell.text = f'Header {row_count + 1}-{col_count + 1}'\n            else:\n                cell.text = f'Cell {row_count + 1}-{col_count + 1}'\n            col_count += 1\n        row_count += 1\n    # \u200b\u8bbe\u7f6e\u200b\u5355\u5143\u683c\u200b\u5bbd\u5ea6\u200b\n    table.cell(0, 0).width = Inches(1.5)\n    table.cell(0, 1).width = Inches(2.0)\n    table.cell(0, 2).width = Inches(1.5)\n\n\ndef make_doc():\n    \"\"\"\u200b\u751f\u6210\u200bword\u200b\u6587\u6863\u200b\"\"\"\n    doc = Document()\n    first = doc.add_paragraph('\u200b\u7b2c\u4e00\u884c\u200b')\n    # \u200b\u8bbe\u7f6e\u200b\u201c\u200b\u7b2c\u4e00\u884c\u200b\u201d\u200b\u4e3a\u200bHeading 1\u200b\u6837\u5f0f\u200b\n    first.style = doc.styles['Heading 1']\n\n    add_table(doc)\n    doc.add_paragraph('\u200b\u6211\u200b\u7684\u200b\u6587\u6863\u200b\u6807\u9898\u200b')\n    add_table(doc)\n    doc.add_paragraph('\u200b\u7ed3\u675f\u200b')\n    doc.add_paragraph('\u200b\u8fd9\u91cc\u200b\u662f\u200b\u7ed3\u675f\u200b\u540e\u200b')\n    add_table(doc)  # \u200b\u9a8c\u8bc1\u200b\u7ed3\u679c\u200b\u662f\u5426\u200b\u6b63\u786e\u200b\n    # \u200b\u4fdd\u5b58\u6587\u6863\u200b\n    doc.save('output.docx')\n</code></pre> <p></p>"},{"location":"python/pydocx/pydocx_notes/#_2","title":"\ud83d\ude81 \u200b\u83b7\u53d6\u200b\u6307\u5b9a\u200b\u8303\u56f4\u200b\u5185\u200b\u7684\u200b\u8868\u683c","text":"DocxReader.py\u200b\u8fd0\u884c\u200b\u7ed3\u679c\u200b <pre><code>class DocxReader:\n    def __init__(self, file: str):\n        self.document = Document(file)  # openxml\n        self.paragraphs = self.document.paragraphs\n        self.all_tables = self.document.tables\n\n    def get_table_by_sections(self, start_str: str, end_str='') -&gt; dict:\n        \"\"\"\n        \u200b\u83b7\u53d6\u200bdocx\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u6307\u5b9a\u200b\u8303\u56f4\u200b\u7684\u200b\u6240\u6709\u200b\u8868\u683c\u200bid\uff0c\u200b\u5e76\u53d6\u200b\u8868\u683c\u200b\u4e0a\u200b\u4e00\u884c\u200b\u6587\u672c\u200b\u4f5c\u4e3a\u200b\u8868\u540d\u200b\n        :param start_str: \u200b\u8d77\u59cb\u200b\u884c\u200b\u6587\u672c\u200b\uff0c\u200b\u7cbe\u51c6\u200b\u5339\u914d\u200b\n        :param end_str: \u200b\u7ed3\u675f\u200b\u884c\u200b\u6587\u672c\u200b\uff0c\u200b\u7cbe\u51c6\u200b\u5339\u914d\u200b\uff1b\u200b\u65e0\u4f20\u200b\u53c2\u65f6\u200b\u4ece\u200bstart_str\u200b\u4e0b\u65b9\u200b\u5f00\u59cb\u67e5\u627e\u200b\u6700\u8fd1\u200b\u7684\u200b\u8868\u683c\u200bid\n        :return: {tableid:tablename,}\n        \"\"\"\n        find_tbls = {}\n        # \u200b\u83b7\u53d6\u200b\u6307\u5b9a\u200b\u8303\u56f4\u200b\u7684\u200b\u6240\u6709\u200b\u8868\u683c\u200bele\uff0c\u200b\u5b58\u50a8\u200b\u4e3a\u200b{ele:\u200b\u8868\u540d\u200b}\u200b\u683c\u5f0f\u200b\u5b57\u5178\u200b\n        for aPara in self.paragraphs:\n            if aPara.text == start_str:\n                ele = aPara._p\n                if end_str:\n                    # \u200b\u5f53\u200bend_str\u200b\u975e\u7a7a\u65f6\u200b\uff0c\u200b\u904d\u5386\u200bstart_str\u200b\u81f3\u200bend_str\u200b\u7ae0\u8282\u200b\u5185\u200b\u6240\u6709\u200b\u8868\u683c\u200bid\n                    while ele.text != end_str:\n                        ele = ele.getnext()\n                        if ele.tag[-3:] == 'tbl':\n                            _ = ele.getprevious().text  # \u200b\u53d6\u200b\u8868\u683c\u200b\u4e0a\u200b\u4e00\u884c\u200b\u6587\u672c\u200b\u4f5c\u4e3a\u200b\u8868\u540d\u200b\n                        find_tbls[ele] = _\n                else:\n                    # \u200b\u5f53\u200bend_str\u200b\u4e3a\u200b\u7a7a\u65f6\u200b\uff0c\u200b\u4ece\u200bstart_str\u200b\u4e0b\u65b9\u200b\u5f00\u59cb\u67e5\u627e\u200b\u6700\u8fd1\u200b\u7684\u200b\u8868\u683c\u200bid\n                    while ele.tag[-3:] != 'tbl':\n                        ele = ele.getnext()\n                    _ = ele.getprevious().text  # \u200b\u53d6\u200b\u8868\u683c\u200b\u4e0a\u200b\u4e00\u884c\u200b\u6587\u672c\u200b\u4f5c\u4e3a\u200b\u8868\u540d\u200b\n                    find_tbls[ele] = _\n                break\n        return find_tbls\n\n    def get_sepcified_table_content(self, start_str: str, end_str='') -&gt; dict:\n        \"\"\"\n        \u200b\u83b7\u53d6\u200bdocx\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u6307\u5b9a\u200b\u8868\u683c\u200b\u5185\u5bb9\u200b\n        :param start_str: \u200b\u8d77\u59cb\u200b\u884c\u200b\u6587\u672c\u200b\uff0c\u200b\u7cbe\u51c6\u200b\u5339\u914d\u200b\n        :param end_str: \u200b\u7ed3\u675f\u200b\u884c\u200b\u6587\u672c\u200b\uff0c\u200b\u7cbe\u51c6\u200b\u5339\u914d\u200b\uff1b\u200b\u65e0\u4f20\u200b\u53c2\u65f6\u200b\u4ece\u200bstart_str\u200b\u4e0b\u65b9\u200b\u5f00\u59cb\u67e5\u627e\u200b\u6700\u8fd1\u200b\u7684\u200b\u8868\u683c\u200bid\n        :return: {tablename:[ (content[0]),(content[1]) ... ],}\n        \"\"\"\n        find_tbls = self.get_table_by_sections(start_str=start_str, end_str=end_str)\n        res = {}\n        # \u200b\u6240\u6709\u200b\u8868\u683c\u200b\u904d\u5386\u200b\uff0c\u200b\u8fdb\u884c\u200b\u5339\u914d\u200b\u5b58\u50a8\u200b\u4e3a\u200b{\u200b\u8868\u540d\u200b:[(\u200b\u7b2c\u200bn\u200b\u884c\u200b\u5185\u5bb9\u200b)]}\u200b\u683c\u5f0f\u200b\u5b57\u5178\u200b\n        for table in self.all_tables:\n            if table._tbl in find_tbls.keys():\n                tmp = find_tbls.get(table._tbl)\n                res_table = []\n                for row in table.rows:\n                    res_row = tuple(col.text for col in row.cells)\n                    res_table.append(res_row)\n                res[tmp] = res_table\n        return res\n\n\nif __name__ == '__main__':\n    make_doc()  # \u200b\u751f\u6210\u200b\u6587\u4ef6\u200b\u81f3\u200b./output.docx\n    dr = DocxReader('output.docx')\n    res = dr.get_sepcified_table_content('\u200b\u7b2c\u4e00\u884c\u200b', '\u200b\u7ed3\u675f\u200b')\n    for k, v in res.items():\n        print(f'\u200b\u8868\u540d\u200b\uff1a{k}\\n\u200b\u8868\u200b\u5185\u5bb9\u200b\uff1a{v}\\n')\n    res = dr.get_sepcified_table_content('\u200b\u7ed3\u675f\u200b')\n    for k, v in res.items():\n        print(f'\u200b\u8868\u540d\u200b\uff1a{k}\\n\u200b\u8868\u200b\u5185\u5bb9\u200b\uff1a{v}\\n')\n</code></pre> <pre><code>\u200b\u8868\u540d\u200b\uff1a\u200b\u7b2c\u4e00\u884c\u200b  \n\u200b\u8868\u200b\u5185\u5bb9\u200b\uff1a[('Header 1-1', 'Header 1-2', 'Header 1-3'), ('Cell 2-1', 'Cell 2-2', 'Cell 2-3'), ('Cell 3-1', 'Cell 3-2', 'Cell 3-3')]\n\n\u200b\u8868\u540d\u200b\uff1a\u200b\u6211\u200b\u7684\u200b\u6587\u6863\u200b\u6807\u9898\u200b  \n\u200b\u8868\u200b\u5185\u5bb9\u200b\uff1a[('Header 1-1', 'Header 1-2', 'Header 1-3'), ('Cell 2-1', 'Cell 2-2', 'Cell 2-3'), ('Cell 3-1', 'Cell 3-2', 'Cell 3-3')]\n\n\u200b\u8868\u540d\u200b\uff1a\u200b\u8fd9\u91cc\u200b\u662f\u200b\u7ed3\u675f\u200b\u540e\u200b  \n\u200b\u8868\u200b\u5185\u5bb9\u200b\uff1a[('Header 1-1', 'Header 1-2', 'Header 1-3'), ('Cell 2-1', 'Cell 2-2', 'Cell 2-3'), ('Cell 3-1', 'Cell 3-2', 'Cell 3-3')]\n</code></pre> <p>\u200b\u53c2\u8003\u200b\u7684\u200b\u8fd9\u200b\u4e00\u7bc7\u200b\u535a\u5ba2\u200b</p>"},{"location":"python/pydocx/pydocx_notes/#h1","title":"\ud83d\ude81 \u200b\u904d\u5386\u200b\u6587\u6863\u200b\u6240\u6709\u200bh1\u200b\u6807\u9898\u200b\u7684\u200b\u5185\u5bb9","text":"DocxReader.py\u200b\u8fd0\u884c\u200b\u7ed3\u679c\u200b <pre><code>if __name__ == '__main__':\n    make_doc()  # \u200b\u751f\u6210\u200b\u6587\u4ef6\u200b\u81f3\u200b./output.docx\n    dr = DocxReader('output.docx')\n\n    for paragraph in dr.paragraphs:\n        if 'Heading 1' in paragraph.style.name:\n            print(paragraph.text)\n</code></pre> <pre><code>\u200b\u7b2c\u4e00\u884c\u200b\n</code></pre>"},{"location":"python/pyjson/pyjson_notes/","title":"pyjson\u200b\u7b14\u8bb0","text":""},{"location":"python/pyjson/pyjson_notes/#_1","title":"\u5e38\u7528\u200b\u65b9\u6cd5","text":"\u65b9\u6cd5\u200b \u200b\u8bf4\u660e\u200b <code>json.dump()</code> JSON\u200b\u683c\u5f0f\u200b\u7684\u200b\u5b57\u5178\u200b\u5e8f\u5217\u5316\u200b\u81f3\u200b\u6307\u5b9a\u200bjson\u200b\u6587\u4ef6\u200b <code>json.load()</code> \u200b\u6307\u5b9a\u200bJSON\u200b\u6587\u4ef6\u200b\u53cd\u200b\u5e8f\u5217\u5316\u200b\u4e3a\u200b\u5b57\u5178\u200b <code>json.dumps()</code> \u200b\u5b57\u5178\u200b\u8f6c\u200b\u7b26\u5408\u200bJSON\u200b\u6807\u51c6\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b <code>json.loads()</code> \u200b\u7b26\u5408\u200bJSON\u200b\u6807\u51c6\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u8f6c\u200b\u5b57\u5178\u200b <p>JSON\u200b\u6807\u51c6\u200b\uff1a\u200b\u5305\u542b\u200b\u952e\u503c\u200b\u5bf9\u200b\u3001\u200b\u6570\u7ec4\u200b\u7b49\u200b\uff0c\u200b\u5e76\u4e14\u200b\u6240\u6709\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u5fc5\u987b\u200b\u7528\u200b\u53cc\u5f15\u53f7\u200b\u5305\u56f4\u200b</p> <p><code>json.dumps(dict1)</code>\u200b\u8ddf\u200b<code>str(dict1)</code>\u200b\u6253\u5370\u200b\u6548\u679c\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u4f46\u200b\u540e\u8005\u200b\u8f6c\u6362\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u662f\u200b\u4ee5\u200b\u5355\u5f15\u53f7\u200b\u5305\u56f4\u200b\u3002 <code>json.loads(str1)</code>\u200b\u8ddf\u200b<code>eval(str1)</code>\u200b\u6253\u5370\u200b\u6548\u679c\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u4f46\u200b\u540e\u8005\u200b\u4e0d\u200b\u5b89\u5168\u200b\u4e0d\u200b\u9ad8\u6548\u200b\uff08\u200b\u8be5\u200b\u65b9\u6cd5\u200b\u4f1a\u200b\u6267\u884c\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u6709\u6548\u200b\u7684\u200b\u4ee3\u7801\u200b\u6216\u200b\u8868\u8fbe\u5f0f\u200b\uff09\u3002</p> <pre><code>import json\n\ndict1 = {'no': '1', 'regex_str': '\u200b\u7269\u54c1\u200b\\t\u200b\u5355\u4ef7\u200b\\t\u200b\u6570\u91cf\u200b'}\nfilename = 'output.json'\n\nwith open(filename, 'w') as f:\n    # ensure_ascii=False\uff0c\u200b\u4fdd\u7559\u200b\u975e\u200bASCII\u200b\u5b57\u7b26\u200b\u5982\u200b\u6c49\u5b57\u200b\n    # indent=2\uff0c\u200b\u683c\u5f0f\u5316\u200b\uff0c\u200b\u6307\u5b9a\u200b\u6bcf\u7ea7\u200b\u7f29\u8fdb\u200b\u7684\u200b\u7a7a\u683c\u200b\u6570\u4e3a\u200b2\n    json.dump(dict1, f, ensure_ascii=False, indent=2)  # dict1\u200b\u5199\u5165\u200b\u5230\u200boutput.json\n\nwith open(filename, 'r') as f:\n    f_dict = json.load(f)  # \u200b\u4ece\u200boutput.json\u200b\u8bfb\u53d6\u200b\u5185\u5bb9\u200b\u8f6c\u4e3a\u200b\u5b57\u5178\u200b\n    print(f_dict)  # \u200b\u8f93\u51fa\u200b{'no': '1', 'regex_str': '\u200b\u7269\u54c1\u200b\\t\u200b\u5355\u4ef7\u200b\\t\u200b\u6570\u91cf\u200b'}\n\ns = json.dumps(f_dict, ensure_ascii=False)  # f_dict\u200b\u8f6c\u200b\u5b57\u7b26\u4e32\u200b\nprint(s)  # \u200b\u8f93\u51fa\u200b{\"no\": \"1\", \"regex_str\": \"\u200b\u7269\u54c1\u200b\\t\u200b\u5355\u4ef7\u200b\\t\u200b\u6570\u91cf\u200b\"}\n\nd = json.loads(s)  # str\u200b\u8f6c\u200bdict\nprint(d)  # \u200b\u8f93\u51fa\u200b{'no': '1', 'regex_str': '\u200b\u7269\u54c1\u200b\\t\u200b\u5355\u4ef7\u200b\\t\u200b\u6570\u91cf\u200b'}\n\nprint(d.get('regex_str'))  # \u200b\u76f4\u63a5\u200bprint()\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u8f6c\u4e49\u200b\uff0c\u200b\u8f93\u51fa\u200b\uff1a\u200b\u7269\u54c1\u200b    \u200b\u5355\u4ef7\u200b  \u200b\u6570\u91cf\u200b\nprint(repr(d.get('regex_str')))  # repr()\u200b\u4f1a\u200b\u4fdd\u7559\u200b\u8f6c\u4e49\u200b\u6216\u8005\u200b\u7279\u6b8a\u5b57\u7b26\u200b\uff0c\u200b\u8f93\u51fa\u200b\uff1a'\u200b\u7269\u54c1\u200b\\t\u200b\u5355\u4ef7\u200b\\t\u200b\u6570\u91cf\u200b'\nprint(eval(repr(d.get('regex_str'))))  # eval()\u200b\u6267\u884c\u200b\u8f6c\u4e49\u200b\uff0c\u200b\u8f93\u51fa\u200b\uff1a\u200b\u7269\u54c1\u200b    \u200b\u5355\u4ef7\u200b  \u200b\u6570\u91cf\u200b\n</code></pre>"},{"location":"python/pytest/allure/","title":"allure\u200b\u53c2\u6570","text":"<pre><code># \u200b\u751f\u6210\u200ballure\u200b\u62a5\u544a\u200b\u7684\u200b\u6570\u636e\u200b\u6e90\u6587\u4ef6\u200b\uff0cjson\u200b\u683c\u5f0f\u200b\uff1b--clean\u200b\u662f\u200b\u6bcf\u6b21\u200b\u6e05\u7a7a\u200b\n# \u200b\u683c\u5f0f\u200b\uff1aallure generate {\u200b\u6570\u636e\u6e90\u200b\u6587\u4ef6\u76ee\u5f55\u200b} -o {\u200b\u62a5\u544a\u200b\u7684\u200b\u76ee\u5f55\u200b}\nos.system(f'allure generate {data_dir} -o {report_dir} --clean')\n# \u200b\u672c\u5730\u200b\u8fd0\u884c\u200b\nos.system(f'allure open -h {ip} -p {port} {allure_report}')\n</code></pre> <p>\u200b\u53c2\u8003\u200b\u7684\u200b\u8fd9\u200b\u4e00\u7bc7\u200b\u535a\u5ba2\u200b</p>"},{"location":"python/pytest/custom_tag/","title":"\u81ea\u5b9a\u4e49\u200b\u6807\u7b7e","text":"<p>\u200b\u81ea\u5b9a\u4e49\u200b\u6807\u7b7e\u200b<code>@pytest.mark.slow</code>\uff0c\u200b\u7528\u4e8e\u200b\u6807\u8bb0\u200b\u8fd0\u884c\u200b\u65f6\u95f4\u200b\u8f83\u957f\u200b\u7684\u200b\u6d4b\u8bd5\u7528\u4f8b\u200b\u3002</p> <p>\u200b\u8fd0\u884c\u200b\u6d4b\u8bd5\u200b\u65f6\u200b\uff0c\u200b\u9664\u975e\u200b\u660e\u786e\u200b\u6307\u5b9a\u200b\uff0c\u200b\u5426\u5219\u200b\u9ed8\u8ba4\u200b\u8df3\u8fc7\u200b\u8fd9\u4e9b\u200b\u6162\u901f\u200b\u7528\u4f8b\u200b\u3002</p> conftest.pytestcase.pypytest.ini <pre><code>def pytest_collection_modifyitems(items):\n    config = items[0].session.config  # \u200b\u83b7\u53d6\u200bpytest\u200b\u914d\u7f6e\u200b\u5bf9\u8c61\u200b\n\n    if not config.getoption(\"--runslow\"):  # \u200b\u68c0\u67e5\u200b\u547d\u4ee4\u884c\u200b\u9009\u9879\u200b\u4e2d\u200b\u662f\u5426\u200b\u5305\u542b\u200b\u4e86\u200b --runslow\n        skip_slow = pytest.mark.skip(reason=\"need --runslow option to run\")\n        for item in items:\n            if \"slow\" in item.keywords:\n                item.add_marker(skip_slow)  # \u200b\u6dfb\u52a0\u200b skip \u200b\u6807\u7b7e\u200b\u4ee5\u200b\u8df3\u200b\u8fc7\u200b\u8be5\u200b\u6d4b\u8bd5\u7528\u4f8b\u200b\n</code></pre> <pre><code>@pytest.mark.slow\ndef test_long_running():\n    pass\n</code></pre> <pre><code>[pytest]\nmarkers =\n    slow: \u200b\u8fd0\u884c\u200b\u65f6\u95f4\u200b\u8f83\u957f\u200b\u7684\u200b\u6d4b\u8bd5\u7528\u4f8b\u200b\n</code></pre> <p>\u200b\u73b0\u5728\u200b\u8fd0\u884c\u200bpytest\u200b\u65f6\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u6240\u6709\u200b\u5e26\u6709\u200b<code>@pytest.mark.slow</code>\u200b\u6807\u7b7e\u200b\u7684\u200b\u7528\u4f8b\u200b\u90fd\u200b\u4f1a\u200b\u88ab\u200b\u8df3\u200b\u8fc7\u200b\u3002</p> <p>\u200b\u82e5\u200b\u8981\u200b\u8fd0\u884c\u200b\u8fd9\u4e9b\u200b\u6162\u901f\u200b\u7528\u4f8b\u200b\uff0c\u200b\u5219\u200b\u901a\u8fc7\u200b\u53c2\u6570\u200b<code>--runslow</code>\u200b\u6765\u200b\u6307\u5b9a\u200b\uff1a</p> <p><code>pytest --runslow</code></p>"},{"location":"python/pytest/fixture/","title":"\u6d4b\u8bd5\u200b\u5939\u5177","text":""},{"location":"python/pytest/fixture/#fixture","title":"\ud83d\ude81 Fixture \u200b\u4f5c\u7528\u57df","text":"<p>\u200b\u5f53\u200b\u6d4b\u8bd5\u200b\u7b2c\u4e00\u6b21\u200b\u8bf7\u6c42\u200b\u65f6\u200b\u521b\u5efa\u200bfixture\uff0c\u200b\u5e76\u200b\u6839\u636e\u200b\u5b83\u4eec\u200b\u7684\u200b<code>scope</code>\u200b\u53c2\u6570\u503c\u200b\u9500\u6bc1\u200b\uff1a</p> <ul> <li> <p>function\uff1a\u200b\u9ed8\u8ba4\u503c\u200b\uff0c\u200b\u51fd\u6570\u200b\u7ea7\u200b\u6bcf\u4e2a\u200b\u6d4b\u8bd5\u51fd\u6570\u200b\u6267\u884c\u200b\u4e00\u6b21\u200b\u3002</p> </li> <li> <p>class\uff1a\u200b\u7c7b\u200b\u7ea7\u522b\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u6d4b\u8bd5\u200b\u7c7b\u200b\u6267\u884c\u200b\u4e00\u6b21\u200b\u3002</p> </li> <li> <p>module\uff1a\u200b\u6a21\u5757\u200b\u7ea7\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u6d4b\u8bd5\u200b\u6a21\u5757\u200b\u6267\u884c\u200b\u4e00\u6b21\u200b\u3002</p> </li> <li> <p>package: \u200b\u5305\u200b\u7ea7\u522b\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u6d4b\u8bd5\u200b\u5305\u200b\u6267\u884c\u200b\u4e00\u6b21\u200b\u3002\u200b\u8981\u6c42\u200btestcase\u200b\u76ee\u5f55\u200b\u662f\u200bpackage\u200b\u800c\u200b\u975e\u200bdirectory\u3002</p> </li> <li> <p>session: \u200b\u4f1a\u8bdd\u7ea7\u200b\uff0c\u200b\u6574\u4e2a\u200b\u4f1a\u8bdd\u200b\u53ea\u200b\u6267\u884c\u200b\u4e00\u6b21\u200b\u3002</p> </li> </ul>"},{"location":"python/pytest/fixture/#setupteardown","title":"\ud83d\ude81 setUp/tearDown\u200b\u65b9\u6cd5","text":"<p>setUp/tearDown\u200b\u662f\u200b\u6267\u884c\u200b\u6d4b\u8bd5\u7528\u4f8b\u200b\u7684\u200b\u524d\u7f6e\u200b/\u200b\u540e\u7f6e\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u521d\u59cb\u5316\u200b/\u200b\u6e05\u7406\u200b\u73af\u5883\u200b\u3002\u200b\u7ee7\u627f\u200bunittest\u200b\u7684\u200b\u7c7b\u200b\u53ef\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u540c\u540d\u200b\u65b9\u6cd5\u200b\u3002</p> <p>pytest\u200b\u4e2d\u200b\u4e5f\u200b\u6709\u200b\u7c7b\u4f3c\u200b\u540d\u79f0\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u200b\u901a\u8fc7\u200b<code>yield fixtures</code> \u200b\u5b9e\u73b0\u200b\u7c7b\u4f3c\u200b\u529f\u80fd\u200b\u3002</p> conftest.pyTestcase.py <pre><code>@pytest.fixture(scope='package')\ndef myfunc():\n    conn = dbUtils.connect()  # \u200b\u6570\u636e\u5e93\u200b\u5de5\u5177\u200b\u7c7b\u200b\u5b9e\u4f8b\u200b\n    driver = webdriver.Chrome()  # webdriver\u200b\u5b9e\u4f8b\u200b\n    yield conn,driver\n    conn.close()\n    driver.quit()\n</code></pre> <pre><code>def test_case1(myfunc):\n    conn, driver = myfunc\n    conn.execute(\"select * from table\")\n    driver.get(\"http://www.baidu.com\")\n    assert driver.title == \"\u200b\u767e\u5ea6\u200b\u4e00\u4e0b\u200b\uff0c\u200b\u4f60\u200b\u5c31\u200b\u77e5\u9053\u200b\"\n</code></pre>"},{"location":"python/pytest/fixture/#_1","title":"\ud83d\ude81 \u200b\u53c2\u6570\u200b\u5316","text":"<p>pytest\u200b\u53c2\u6570\u200b\u5316\u200b\u7684\u200b\u65b9\u5f0f\u200b\u5305\u62ec\u200b\uff1a</p> <ul> <li>\u200b\u4f7f\u7528\u200b\u6d4b\u8bd5\u200b\u5939\u5177\u200bparams\u200b\u53c2\u6570\u200b\uff0c<code>return request.param</code>\u200b\u8fd4\u56de\u200b\u53c2\u6570\u200b\u5316\u200b\u7684\u200b\u6570\u636e\u200b\u3002</li> <li>\u200b\u4f7f\u7528\u200b<code>pytest.mark.parametrize</code>\u200b\u88c5\u9970\u200b\u5668\u200b\u3002</li> </ul> \u200b\u6d4b\u8bd5\u7528\u4f8b\u200b\u88ab\u6d4b\u200b\u65b9\u6cd5\u200bYamlUtil.py\u200b\u6d4b\u8bd5\u6570\u636e\u200b\u8fd0\u884c\u200b\u7ed3\u679c\u200b <pre><code>import os\nimport pytest\n\nfrom learn.ZhEnMerge import zh_en_merge\nfrom utils.SomeConstant import TESTDATA_PATH\nfrom utils.YamlUtil import YamlUtil\n\ntestdata = YamlUtil(os.path.join(TESTDATA_PATH, 'ZhEnMergeTestData.yaml')).get_yaml_data().get('zh_en_merge_testdata')\n\n\n@pytest.fixture(params=testdata)\ndef param_testdata(request):\n    return request.param\n\n\nclass TestZhEnMerge:\n\n    def test_zh_en_merge(self, param_testdata):\n        input_zh = param_testdata.get('input_zh')\n        input_en = param_testdata.get('input_en')\n        expected = param_testdata.get('expected')\n        assert zh_en_merge(input_zh, input_en) == expected\n\n    # pytest\u200b\u53c2\u6570\u200b\u5316\u200b\u88c5\u9970\u200b\u5668\u200b\u7684\u200b\u4f20\u53c2\u200b\u683c\u5f0f\u200b\u4e3a\u200b(\"\u200b\u53c2\u6570\u200b1, \u200b\u53c2\u6570\u200b2\", \u200b\u5217\u8868\u200b\u6570\u636e\u200b\u5982\u200b[(input1, expected1), (input2, expected2)]])\n    # \u200b\u8f6c\u6362\u200b\u4e3a\u200b\u5408\u9002\u200b\u7684\u200b\u4f20\u53c2\u200b\u683c\u5f0f\u200b\n    testdata_for_parametrize = [(t.get('input_zh'), t.get('input_en'), t.get('expected')) for t in testdata]\n\n    @pytest.mark.parametrize('input_zh, input_en, expected', testdata_for_parametrize)\n    def test_zh_en_merge_with_parametrize(self, input_zh, input_en, expected):\n        assert zh_en_merge(input_zh, input_en) == expected\n</code></pre> <pre><code>import re\n\n\ndef zh_en_merge(cn: str, en: str) -&gt; str:\n    \"\"\"\n    \u200b\u628a\u200b\u4f20\u5165\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u6392\u9664\u200bhtml\u200b\u5b57\u7b26\u200b\u3001{}\u200b\u5b57\u7b26\u200b\u7b49\u200b\uff0c\u200b\u5e76\u200b\u4ee5\u200b\u201c\u200b\u4e2d\u6587\u200b(\u200b\u82f1\u6587\u200b)\u201d\u200b\u7684\u200b\u683c\u5f0f\u200b\u8fdb\u884c\u200b\u62fc\u63a5\u200b\n    \u200b\u4f46\u200b\u7531\u4e8e\u200b\u8bed\u8a00\u200b\u8bed\u6cd5\u200b\u95ee\u9898\u200b\u5bfc\u81f4\u200b\u7ed3\u679c\u200b\u4e0d\u200b\u7406\u60f3\u200b\n    :param cn: \u200b\u4e2d\u6587\u200b\u5b57\u7b26\u4e32\u200b\n    :param en: \u200b\u82f1\u6587\u200b\u5b57\u7b26\u4e32\u200b\n    :return: \u200b\u5408\u5e76\u200b\u540e\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\n    \"\"\"\n    # (?:...) \u200b\u975e\u200b\u6355\u83b7\u200b\u5206\u7ec4\u200b\uff0c\u200b\u4fdd\u7559\u200b\u5339\u914d\u200b\u7684\u200b\u5185\u5bb9\u200b\u4e0d\u518d\u200b\u5339\u914d\u200b\n    # &lt;[^&gt;]+&gt; \u200b\u5339\u914d\u200bhtml\u200b\u6807\u7b7e\u200b\n    # \\{.*?\\} \u200b\u5339\u914d\u200b{xxx}\u200b\u683c\u5f0f\u200b\u7684\u200b\u53c2\u6570\u200b\n    # [^&lt;&gt;{}:]++ \u200b\u65e0\u82b1\u200b\u62ec\u53f7\u200b\u3001\u200b\u5c16\u89d2\u200b\u7b26\u53f7\u200b\u3001\u200b\u5192\u53f7\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\n    zh_res = re.findall(r'(?:&lt;[^&gt;]+&gt;|\\{.*?\\}|[^&lt;&gt;{}:]+|:)', cn)\n    en_res = re.findall(r'(?:&lt;[^&gt;]+&gt;|\\{.*?\\}|[^&lt;&gt;{}:]+|:)', en)\n    for i in range(len(zh_res)):\n        if zh_res[i].strip() != en_res[i].strip():\n            zh_res[i] += f'({en_res[i].strip()})'\n\n    marge_str = ''.join(zh_res)\n    return marge_str\n</code></pre> <pre><code>import os\nimport yaml\n\n\n# Yaml\u200b\u6587\u4ef6\u200b\u8bfb\u53d6\u200b\u7684\u200b\u5de5\u5177\u200b\u7c7b\u200b\nclass YamlUtil:\n    def __init__(self, file_dir):\n        self.file_dir = str(file_dir)\n\n    def get_yaml_data(self) -&gt; dict:\n        if os.path.exists(self.file_dir):\n            data = open(self.file_dir, 'r', encoding='utf-8')\n            res = yaml.load(data, Loader=yaml.FullLoader)\n        else:\n            raise FileNotFoundError(\"\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\u4e0d\u200b\u5b58\u5728\u200b\uff0c\u200b\u8bf7\u200b\u68c0\u67e5\u200b\")\n        return res\n</code></pre> <pre><code>zh_en_merge_testdata:\n  - input_zh: '&lt;b&gt;{description}&lt;/b&gt;\\n\u200b\u65e5\u671f\u200b:{1}\\n\u200b\u65f6\u95f4\u200b:{2}'\n    input_en: '&lt;b&gt;{description}&lt;/b&gt;\\nDate:{1}\\nTime:{2}'\n    expected: '&lt;b&gt;{description}&lt;/b&gt;\\n\u200b\u65e5\u671f\u200b(\\nDate):{1}\\n\u200b\u65f6\u95f4\u200b(\\nTime):{2}'\n  - input_zh: '\u200b\u652f\u4ed8\u200b&lt;b&gt;{0}&lt;/b&gt;(&lt;b&gt;{1}&lt;/b&gt; \u200b\u6765\u81ea\u200b\u56fd\u5e93\u200b)\u200b\u83b7\u53d6\u200b\u6b64\u200b\u8d44\u6e90\u200b\u3002'\n    input_en: 'Pay &lt;b&gt;{0}&lt;/b&gt; (&lt;b&gt;{1}&lt;/b&gt; in treasury) to claim this resource.'\n    expected: '\u200b\u652f\u4ed8\u200b(Pay)&lt;b&gt;{0}&lt;/b&gt;(&lt;b&gt;{1}&lt;/b&gt; \u200b\u6765\u81ea\u200b\u56fd\u5e93\u200b)\u200b\u83b7\u53d6\u200b\u6b64\u200b\u8d44\u6e90\u200b\u3002(in treasury) to claim this resource.)'\n</code></pre> <pre><code>TestZhEnMerge.py::TestZhEnMerge::test_zh_en_merge[param_testdata0] PASSED [ 25%]\nTestZhEnMerge.py::TestZhEnMerge::test_zh_en_merge[param_testdata1] PASSED [ 50%]\nTestZhEnMerge.py::TestZhEnMerge::test_zh_en_merge_with_parametrize[&lt;b&gt;{description}&lt;\\b&gt;\\n\\u65e5\\u671f:{1}\\n\\u65f6\\u95f4:{2}-&lt;b&gt;{description}&lt;\\b&gt;\\nDate:{1}\\nTime:{2}-&lt;b&gt;{description}&lt;\\b&gt;\\n\\u65e5\\u671f(\\nDate):{1}\\n\\u65f6\\u95f4(\\nTime):{2}] PASSED [ 75%]\nTestZhEnMerge.py::TestZhEnMerge::test_zh_en_merge_with_parametrize[\\u652f\\u4ed8&lt;b&gt;{0}&lt;\\b&gt;(&lt;b&gt;{1}&lt;\\b&gt; \\u6765\\u81ea\\u56fd\\u5e93)\\u83b7\\u53d6\\u6b64\\u8d44\\u6e90\\u3002-Pay &lt;b&gt;{0}&lt;\\b&gt; (&lt;b&gt;{1}&lt;\\b&gt; in treasury) to claim this resource.-\\u652f\\u4ed8(Pay)&lt;b&gt;{0}&lt;\\b&gt;(&lt;b&gt;{1}&lt;\\b&gt; \\u6765\\u81ea\\u56fd\\u5e93)\\u83b7\\u53d6\\u6b64\\u8d44\\u6e90\\u3002(in treasury) to claim this resource.)] PASSED [100%]\n</code></pre>"},{"location":"python/pytest/fixture/#unicode","title":"\u2753 \u200b\u5173\u4e8e\u200b\u63a7\u5236\u53f0\u200b\u6253\u5370\u200b\u5c06\u200b\u6c49\u5b57\u200b\u8f6c\u4e3a\u200bUnicode\u200b\u5b57\u7b26","text":"<p>\u200b\u4ece\u200b\u4e0a\u8ff0\u200b\u8fd0\u884c\u200b\u7ed3\u679c\u200b\u53ef\u4ee5\u200b\u770b\u51fa\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>pytest.mark.parametrize</code>\u200b\u88c5\u9970\u200b\u5668\u65f6\u200b\uff0c\u200b\u63a7\u5236\u53f0\u200b\u6253\u5370\u200b\u5c06\u200b\u6c49\u5b57\u200b\u8f6c\u4e3a\u200b\u4e86\u200bUnicode\u200b\u5b57\u7b26\u200b\u3002</p> <p>\u200b\u5b9e\u9645\u4e0a\u200b\u5404\u200b\u6587\u4ef6\u200b\u7f16\u7801\u200b\u3001IDE\u200b\u7684\u200b\u8f93\u51fa\u200b\u7f16\u7801\u200b\u3001pytest.ini\u200b\u7f16\u7801\u200b\u8bbe\u7f6e\u200b\u90fd\u200b\u662f\u200butf-8\uff0c\u200b\u4e14\u200b\u8c03\u8bd5\u200b\u65f6\u200b\u4e5f\u200b\u80fd\u200b\u6b63\u5e38\u200b\u89e3\u6790\u200b\u6c49\u5b57\u200b\uff0c\u200b\u4e0d\u200b\u5f71\u54cd\u200b\u8fd0\u884c\u200b\u7ed3\u679c\u200b\u3002</p> <p></p> <p>\u200b\u89e3\u51b3\u65b9\u6848\u200b\u53ef\u200b\u53c2\u8003\u200b\u8fd9\u200b\u4e00\u7bc7\u200b\uff0c\u200b\u4f7f\u7528\u200bpytest\u200b\u94a9\u5b50\u200b\u51fd\u6570\u200b\uff0c\u200b\u5728\u200b\u6d4b\u8bd5\u200b\u9879\u200b\u6536\u96c6\u200b\u5b8c\u6210\u200b\u9636\u6bb5\u200b\u5904\u7406\u200b\u7f16\u7801\u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u8865\u5145\u200b</p> <p>pytest\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5927\u91cf\u200b\u7684\u200b\u94a9\u5b50\u200b\u51fd\u6570\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u51fd\u6570\u200b\u5141\u8bb8\u200b\u5728\u200b\u6d4b\u8bd5\u200b\u6267\u884c\u200b\u7684\u200b\u5404\u4e2a\u200b\u9636\u6bb5\u200b\u8fdb\u884c\u200b\u5b9a\u5236\u200b\u548c\u200b\u6269\u5c55\u200b\u3002</p> <p>\u200b\u53c2\u8003\u8d44\u6599\u200b\uff1a</p> <p>1.How to use fixtures</p> <p>2.pytest hooks\u200b\u51fd\u6570\u200b</p>"},{"location":"python/pytest/pytest.ini/","title":"pytest.ini","text":""},{"location":"python/pytest/pytest.ini/#pytest-jaydebeapi","title":"\ud83d\ude81 pytest + jaydebeapi","text":"<p>pytest\u200b\u8fd0\u884c\u200b\uff0c\u200b\u7528\u4f8b\u200b\u8c03\u7528\u200bjaydebeapi\u200b\u5e93\u65f6\u200b\uff0c\u200b\u65e5\u5fd7\u200b\u51fa\u73b0\u200b<code>Windows fatal exception</code>\u200b\u7b49\u200b\u4e00\u5927\u200b\u4e32\u200b\u62a5\u9519\u200b\u3002</p> <p>\u200b\u867d\u7136\u200b\u4e0d\u200b\u5f71\u54cd\u200b\u8fd0\u884c\u200b\uff0c\u200b\u4f46\u200b\u5f71\u54cd\u200b\u770b\u200b\u65e5\u5fd7\u200b\u4f53\u9a8c\u200b\u3002</p> <p>\u200b\u5177\u4f53\u200b\u539f\u56e0\u200b\u5206\u6790\u200b</p> <p>\u200b\u89e3\u51b3\u200b\u65b9\u6cd5\u200b\uff1a\u200b\u5728\u200b<code>pytest.ini</code>\u200b\u4e2d\u200b\u914d\u7f6e\u200b<code>addopts = -p no:faulthandler</code>\u3002</p>"},{"location":"python/pytest/pytest.ini/#_1","title":"\ud83d\ude81 \u200b\u8bbe\u7f6e\u200b\u544a\u8b66\u200b\u8fc7\u6ee4","text":"<pre><code>[pytest]\nfilterwarnings =\n    error\n    ignore:UserWarning  # \u200b\u9664\u200bUserWarning\uff0c\u200b\u5176\u4ed6\u200b\u7684\u200b\u544a\u8b66\u200b\u5347\u7ea7\u200b\u4e3a\u200berror\n</code></pre>"},{"location":"python/pytest/pytest.ini/#_2","title":"\ud83d\ude81 \u200b\u6307\u5b9a\u200b\u65e5\u5fd7\u200b\u683c\u5f0f","text":"<pre><code>[pytest]\n# \u200b\u6307\u5b9a\u200b\u65e5\u5fd7\u200b\u683c\u5f0f\u200b\u4e3a\u200b\uff1a\u200b\u65e5\u671f\u200b \u200b\u65e5\u5fd7\u200b\u7ea7\u522b\u200b \u200b\u65e5\u5fd7\u200b\u5185\u5bb9\u200b\n# -8s\u200b\u4ee3\u8868\u200b\u957f\u5ea6\u200b\u4e3a\u200b8\u200b\u4e2a\u5b57\u7b26\u200b\uff0c\u200b\u4e0d\u8db3\u200b\u65f6\u4ee5\u200b\u7a7a\u683c\u200b\u8865\u5168\u200b \nlog_format = %(asctime)s %(levelname)-8s %(message)s\nlog_date_format = %Y-%m-%d %H:%M:%S\n</code></pre>"},{"location":"python/pytest/pytest.main/","title":"pytest.main\u200b\u53c2\u6570","text":"<pre><code>'''\n-s \u200b\u8f93\u51fa\u200b\u6253\u5370\u4fe1\u606f\u200b\u5230\u200b\u63a7\u5236\u53f0\u200b\uff0c\u200b\u5173\u95ed\u200b\u6355\u6349\u200b\n-v \u200b\u663e\u793a\u200b\u5177\u4f53\u200b\u7684\u200b\u7528\u4f8b\u200b\u6267\u884c\u200b\u7684\u200b\u8be6\u7ec6\u4fe1\u606f\u200b\n-q \u200b\u7b80\u5316\u200b\u8f93\u51fa\u200b\u4fe1\u606f\u200b\n--reruns=1 \u200b\u5931\u8d25\u200b\u7528\u4f8b\u200b\u91cd\u8dd1\u200b\uff0c\u200b\u6b21\u6570\u200b\u4e3a\u200b1\n--alluredir=file_dir \u200b\u6307\u5b9a\u200b\u62a5\u544a\u200b\u7684\u200b\u6570\u636e\u6e90\u200b\u6587\u4ef6\u76ee\u5f55\u200b\u8def\u5f84\u200b\n'''\n\n# \u200b\u65b9\u5f0f\u200b1\uff0c\u200b\u8fd0\u884c\u200b\u5168\u90e8\u200b\u7528\u4f8b\u200b\nrun_info = ['-v', '-s', '-q', '--reruns', 1, '--alluredir', file_dir]\n# \u200b\u65b9\u5f0f\u200b2\uff0c\u200b\u8fd0\u884c\u200b\u4e0a\u6b21\u200b\u5931\u8d25\u200b\u7684\u200b\u7528\u4f8b\u200b\nrun_info = ['--lf', '-s', '-q', '--reruns', 1, '--alluredir', file_dir]\n\n# \u200b\u65b9\u5f0f\u200b3\uff0c\u200b\u8fd0\u884c\u200b\u6307\u5b9a\u200b\u6a21\u5757\u200b\nrun_info = ['-vs', 'testCompare.py', '--alluredir', file_dir]\n# \u200b\u65b9\u5f0f\u200b4\uff0c\u200b\u8fd0\u884c\u200b\u6307\u5b9a\u200b\u76ee\u5f55\u200b\nrun_info = ['-vs', './testcase', '--alluredir', file_dir]\n# \u200b\u65b9\u5f0f\u200b5\uff0c\u200b\u8fd0\u884c\u200b\u6307\u5b9a\u200b\u65b9\u6cd5\u200b\nrun_info = ['-vs', './testcase/testCompare.py::TestMyCompare::test_01_regex', '--alluredir', file_dir]\n\n# -m \u200b\u901a\u8fc7\u200b\u6807\u8bb0\u200b\u6765\u200b\u6267\u884c\u200b\n# \u200b\u65b9\u5f0f\u200b6\uff0c\u200b\u8fd0\u884c\u200b\u5e26\u200b\u6307\u5b9a\u200b\u6807\u7b7e\u200b\u7684\u200b\u7528\u4f8b\u200b\uff0c\u200b\u642d\u914d\u200b`@pytest.mark.\u200b\u6807\u7b7e\u200b\u540d\u200b`\u200b\u4f7f\u7528\u200b\nrun_info = ['-m', 'smoke or level0', '-s', '-q', '--alluredir', file_dir]\n# '-m', 'smoke not level0'\uff0c\u200b\u8868\u793a\u200b\u5e26\u200bsmoke\u200b\u4f46\u200b\u975e\u200blevel0\u200b\u6807\u7b7e\u200b\n\npytest.main(run_info)\n</code></pre> <p>\u200b\u53c2\u8003\u200b\u7684\u200b\u8fd9\u200b\u4e00\u7bc7\u200b\u535a\u5ba2\u200b</p>"},{"location":"python/structure/binary_tree/","title":"\u4e8c\u53c9\u6811","text":"<ul> <li>\u200b\u7b2c\u4e00\u5c42\u200b\u8282\u70b9\u200b\u5c0f\u4e8e\u200b\u7b2c\u4e8c\u5c42\u200b\u8282\u70b9\u200b\uff0c\u200b\u4f9d\u6b64\u7c7b\u63a8\u200b\u3002</li> <li>\u200b\u6811\u200b\u5de6\u8fb9\u200b\u7684\u200b\u8282\u70b9\u200b\u5c0f\u4e8e\u200b\u53f3\u8fb9\u200b\u7684\u200b\u8282\u70b9\u200b\uff0c\u200b\u4f9d\u6b64\u7c7b\u63a8\u200b\u3002</li> <li>\u200b\u524d\u5e8f\u200b\uff1a\u200b\u6839\u200b\u5de6\u53f3\u200b\uff1b\u200b\u4e2d\u5e8f\u200b\uff1a\u200b\u5de6\u6839\u53f3\u200b\uff1b\u200b\u540e\u5e8f\u200b\uff1a\u200b\u5de6\u53f3\u200b\u6839\u200b\u3002</li> <li>\u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u7b2c\u200bk\u200b\u5c42\u200b\u7684\u200b\u8282\u70b9\u200b\u6570\u6700\u591a\u200b\u4e3a\u200b\uff1a2\u200b\u7684\u200b(k-1)\u200b\u6b21\u65b9\u200b\u3002</li> </ul>"},{"location":"python/structure/dict%26set/","title":"\u5b57\u5178\u200b\u548c\u200b\u96c6\u5408","text":""},{"location":"python/structure/dict%26set/#dict","title":"\ud83d\udccc \u200b\u5b57\u5178\u200bdict","text":"<ul> <li>\u200b\u952e\u503c\u200b\u5bf9\u200b\u683c\u5f0f\u200b\uff0c\u200b\u5982\u200b<code>dict1 = {'account':'7299'}</code>\uff0c\u200b\u4e0e\u200bcookies\u200b\u6570\u636e\u683c\u5f0f\u200b\u7c7b\u4f3c\u200b\u3002</li> <li>\u200b\u65e0\u5e8f\u200b\uff0c\u200b\u952e\u200b\u552f\u4e00\u200b\uff0c\u200b\u503c\u200b\u4e0d\u200b\u552f\u4e00\u200b</li> <li>\u200b\u952e\u200b\u5fc5\u987b\u200b\u4e3a\u200b\u975e\u7a7a\u200b\u7684\u200b\u3001\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u5bf9\u8c61\u200b</li> </ul>"},{"location":"python/structure/dict%26set/#_1","title":"\ud83d\ude81 \u200b\u5b57\u5178\u200b\u5e38\u7528\u200b\u65b9\u6cd5","text":"\u65b9\u6cd5\u200b \u200b\u8bf4\u660e\u200b <code>dict1.get('account','Not exist')</code> \u200b\u83b7\u53d6\u200b\u952e\u200b'account'\u200b\u7684\u200b\u503c\u200b\uff1b\u200b\u4e0d\u200b\u5b58\u5728\u200b\u952e\u65f6\u200b\u5219\u200b\u8fd4\u56de\u200b'Not exist'\u200b\u907f\u514d\u200b\u629b\u200b\u5f02\u5e38\u200b <code>dict1.setdefault('account','none')</code> \u200b\u4e0e\u200bget()\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u200b\u5b58\u5728\u200b\u952e\u200b\u65f6\u4f1a\u200b\u8bbe\u7f6e\u200b\u9ed8\u8ba4\u503c\u200b'none' <code>dict1.pop('account','Not exist')</code> \u200b\u5220\u9664\u200b\u5355\u4e2a\u200b\u952e\u503c\u200b\u5bf9\u200b\uff0c\u200b\u8fd4\u56de\u200b\u952e\u200b'account'\u200b\u7684\u200b\u503c\u200b\uff1b\u200b\u4e0d\u200b\u5b58\u5728\u200b\u952e\u65f6\u200b\u8fd4\u56de\u200b'Not exist'\u200b\u907f\u514d\u200b\u629b\u200b\u5f02\u5e38\u200b <code>dict1.popitem()</code> \u200b\u5220\u9664\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u952e\u503c\u200b\u5bf9\u200b\uff0c\u200b\u8fd4\u56de\u200b\u8be5\u200b\u952e\u503c\u200b\u5bf9\u200b\u5143\u7ec4\u200b <code>dict1.clear()</code> \u200b\u5220\u9664\u200b\u6240\u6709\u200b\u952e\u503c\u200b\u5bf9\u200b <code>dict1.update({'pw':'008'})</code> \u200b\u66f4\u65b0\u200b\u5b57\u5178\u200b\uff0c\u200b\u82e5\u952e\u200b\u76f8\u540c\u200b\uff0c\u200b\u5219\u200b\u66f4\u65b0\u200b\u503c\u200b\uff0c\u200b\u82e5\u952e\u200b\u4e0d\u200b\u5b58\u5728\u200b\uff0c\u200b\u5219\u200b\u6dfb\u52a0\u200b\u952e\u503c\u200b\u5bf9\u200b <code>dict1.items()</code> \u200b\u8fd4\u56de\u200b\u5b57\u5178\u200b\u4e2d\u200b\u6240\u6709\u200b\u952e\u503c\u200b\u5bf9\u200b\u7684\u200b\u5143\u7ec4\u200b\u7684\u200b\u5217\u8868\u200b\uff0c\u200b\u5373\u200b\u952e\u503c\u200b\u5bf9\u200b\u7684\u200b\u5217\u8868\u200b <code>dict1.keys()</code> \u200b\u8fd4\u56de\u200b\u5b57\u5178\u200b\u4e2d\u200b\u6240\u6709\u200b\u952e\u200b\u7684\u200b\u5217\u8868\u200b <code>dict1.values()</code> \u200b\u8fd4\u56de\u200b\u5b57\u5178\u200b\u4e2d\u200b\u6240\u6709\u200b\u503c\u200b\u7684\u200b\u5217\u8868\u200b <pre><code># \u200b\u4ec5\u200b\u4fee\u6539\u200b\u952e\u200b\u4e0d\u200b\u4fee\u6539\u200b\u503c\u200b\ndict1 = {'\u200b\u62ec\u53f7\u200b\uff08\uff09': '7299'}\ndict1['\u200b\u65e0\u200b\u62ec\u53f7\u200b'] = dict1.pop('\u200b\u62ec\u53f7\u200b\uff08\uff09')\n\ndict1.update({'account': '7299'})\nk_list = list(dict1.keys())  # ['\u200b\u65e0\u200b\u62ec\u53f7\u200b', 'account']\nv_list = list(dict1.values())  # ['7299', '7299']\n\nk_list.append('key3')\n# \u200b\u5217\u8868\u200b\u8f6c\u200b\u5b57\u5178\u200b\ndict2 = dict(zip(k_list, v_list))  # zip()\u200b\u53d6\u200b\u6700\u5c11\u200b\u4e2a\u6570\u200b\u4f5c\u4e3a\u200b\u957f\u5ea6\u200b\n\nlist3 = ['key1']\ndict3 = zip(k_list, v_list, list3)\nprint(list(dict3))  # \u200b\u8f93\u51fa\u200b[('\u200b\u65e0\u200b\u62ec\u53f7\u200b', '7299', 'key1')]\n</code></pre>"},{"location":"python/structure/dict%26set/#_2","title":"\ud83d\ude81 \u200b\u5b57\u5178\u200b\u904d\u5386","text":"<pre><code>dict1 = {'account': '7299'}\n\nfor key, value in dict1.items():\n    print(key, \":\", value)\n</code></pre>"},{"location":"python/structure/dict%26set/#set","title":"\ud83d\udccc \u200b\u96c6\u5408\u200bset","text":"<ul> <li>\u200b\u4e0e\u200b\u5b57\u5178\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u4f46\u200b\u6ca1\u6709\u200b\u503c\u200b\uff0c\u200b\u76f8\u5f53\u4e8e\u200b\u5b57\u5178\u200b\u7684\u200b\u952e\u200b\u96c6\u5408\u200b\u3002</li> <li>\u200b\u521b\u5efa\u200b\u7a7a\u96c6\u5408\u200b\u53ea\u80fd\u200b\u4f7f\u7528\u200b<code>s = set()</code>\uff0c\uff0c\u200b\u56e0\u4e3a\u200b<code>s={}</code>\u200b\u521b\u5efa\u200b\u7684\u200b\u662f\u200b\u7a7a\u200b\u5b57\u5178\u200b</li> <li>\u200b\u65e0\u5e8f\u200b\u552f\u4e00\u200b\uff0c\u200b\u9002\u7528\u200b\u4e8e\u200b\u91cd\u590d\u200b\u5185\u5bb9\u200b\u53bb\u200b\u91cd\u200b</li> <li>\u200b\u4ea4\u96c6\u200b&amp;\u3001\u200b\u5e76\u96c6\u200b|\u3001\u200b\u5dee\u96c6\u200b-\u3001\u200b\u8865\u96c6\u200b^\uff1b\u200b\u8865\u96c6\u200b\uff1a\u200b\u8fd4\u56de\u200b\u4e24\u4e2a\u200b\u96c6\u5408\u200b\u7684\u200b\u975e\u200b\u5171\u540c\u200b\u5143\u7d20\u200b\u3002</li> </ul>"},{"location":"python/structure/mutable%26immutable/","title":"\u53ef\u53d8\u200b/\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u7c7b\u578b","text":"<p>\u200b\u53ef\u53d8\u200b\u7c7b\u578b\u200b\u4e3b\u8981\u200b\u5305\u62ec\u200b\uff1a\u200b\u5217\u8868\u200b\u3001\u200b\u5b57\u5178\u200b\u3001\u200b\u96c6\u5408\u200b</p> <p>\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u7c7b\u578b\u200b\u4e3b\u8981\u200b\u5305\u62ec\u200b\uff1a\u200b\u6574\u6570\u200b\u3001\u200b\u5b57\u7b26\u4e32\u200b\u3001\u200b\u6d6e\u70b9\u6570\u200b\u3001\u200b\u5143\u7ec4\u200b</p>"},{"location":"python/structure/mutable%26immutable/#_1","title":"\ud83d\udccc \u200b\u65b9\u6cd5\u200b\u53c2\u6570\u200b\u9ed8\u8ba4\u503c\u200b\u4e3a\u200b\u53ef\u53d8\u200b\u7c7b\u578b","text":"<p>\u200b\u65b9\u6cd5\u200b\u53c2\u6570\u200b\u9ed8\u8ba4\u503c\u200b\u4e3a\u200b\u53ef\u53d8\u200b\u7c7b\u578b\u200b\u65f6\u200b\uff0c\u200b\u82e5\u200b\u51fd\u6570\u8c03\u7528\u200b\u672a\u4f20\u503c\u200b\uff0c\u200b\u5219\u200b\u8c03\u7528\u51fd\u6570\u200b\u65f6\u200b\u64cd\u4f5c\u200b\u7684\u200b\u5b9e\u9645\u200b\u662f\u200b\u540c\u4e2a\u200b\u5bf9\u8c61\u200b\u3002</p> <p>\u200b\u5e94\u5f53\u200b\u4f7f\u7528\u200bNone\u200b\u4f5c\u4e3a\u200b\u9ed8\u8ba4\u503c\u200b\uff0c\u200b\u5e76\u200b\u5728\u200b\u7a0b\u5e8f\u200b\u4e2d\u200b\u91cd\u65b0\u200b\u521d\u59cb\u5316\u200b\u3002</p> <pre><code>def func(arg_a, list_arg=None):\n    list_arg = list_arg or []\n    list_arg.append(arg_a)\n    print(list_arg)\n</code></pre>"},{"location":"python/structure/mutable%26immutable/#_2","title":"\ud83d\udccc \u200b\u4e0d\u5b9a\u200b\u6570\u91cf\u200b\u7684\u200b\u65b9\u6cd5\u200b\u4f20\u53c2","text":"<ul> <li><code>*args</code>\u200b\u5c06\u200b\u4f20\u53c2\u200b\u6253\u5305\u200b\u4e3a\u200b\u5143\u7ec4\u200btuple\uff0c<code>**kwargs</code>\u200b\u5c06\u200b\u4f20\u53c2\u200b\u6253\u5305\u200b\u4e3a\u200b\u5b57\u5178\u200bdict\u3002</li> <li><code>*args</code>\u200b\u548c\u200b<code>**kwargs</code>\u200b\u662f\u200b\u7ea6\u5b9a\u4fd7\u6210\u200b\u7684\u200b\u547d\u540d\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5b9e\u9645\u4e0a\u200b\u53ef\u4ee5\u200b\u662f\u200b\u4efb\u4f55\u200b\u540d\u79f0\u200b\u3002</li> <li><code>*args</code>\u200b\u548c\u200b<code>**kwargs</code>\u200b\u53c2\u6570\u200b\u901a\u5e38\u200b\u88ab\u200b\u653e\u7f6e\u200b\u5728\u200b\u53c2\u6570\u200b\u5217\u8868\u200b\u7684\u200b\u6700\u540e\u200b\uff0c\u200b\u907f\u514d\u200b\u7f16\u8bd1\u5668\u200b\u65e0\u6cd5\u200b\u6b63\u786e\u200b\u89e3\u6790\u200b\u9884\u671f\u200b\u7684\u200b\u56fa\u5b9a\u200b\u53c2\u6570\u200b\u3002</li> </ul> <pre><code>def my_function(required_arg, *args, **kwargs):\n    print(\"\u200b\u56fa\u5b9a\u200b\u53c2\u6570\u200b:\", required_arg)\n    print(\"args:\", args)\n    print(\"kwargs:\", kwargs)\n\n\nmy_function(1, 2, 3, key1=\"value1\", key2=\"value2\")\n\n# \u200b\u8f93\u51fa\u200b\uff1a\n# \u200b\u56fa\u5b9a\u200b\u53c2\u6570\u200b: 1\n# args: (2, 3)\n# kwargs: {'key1': 'value1', 'key2': 'value2'}\n</code></pre>"},{"location":"python/structure/mutable%26immutable/#_3","title":"\ud83d\udccc \u200b\u6d45\u200b\u62f7\u8d1d\u200b\u4e0e\u200b\u6df1\u200b\u62f7\u8d1d","text":"<p>\u200b\u9488\u5bf9\u200b\u53ef\u53d8\u200b\u7c7b\u578b\u200b\u7684\u200b\u5143\u7d20\u200b\uff0c\u200b\u6d45\u200b\u62f7\u8d1d\u200b\u4ec5\u200b\u590d\u5236\u200b\u4e86\u200b\u5176\u200b\u5f15\u7528\u200b\u3002\u200b\u82e5\u200b\u5bf9\u8c61\u200b\u5b58\u5728\u200b\u5d4c\u5957\u200b\u5c42\u6b21\u200b\u65f6\u200b\uff0c\u200b\u5176\u200b\u5185\u90e8\u200b\u5143\u7d20\u200b\u7684\u200b\u5f15\u7528\u200b\u4e5f\u200b\u4f1a\u200b\u88ab\u200b\u590d\u5236\u200b\u3002</p> <p>\u200b\u6df1\u200b\u62f7\u8d1d\u200b\u5219\u200b\u4f1a\u200b\u9012\u5f52\u200b\u5730\u200b\u590d\u5236\u200b\u5bf9\u8c61\u200b\u53ca\u5176\u200b\u6240\u6709\u200b\u5d4c\u5957\u200b\u5c42\u6b21\u200b\u7684\u200b\u5185\u5bb9\u200b\uff0c\u200b\u5e76\u200b\u521b\u5efa\u200b\u5b8c\u6574\u200b\u526f\u672c\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u5f15\u7528\u200b\u3002</p> <pre><code>a = [1, 2, [3, 4]]\nb = a.copy()  # \u200b\u6d45\u200b\u62f7\u8d1d\u200b\nb[2][0] = 5\nb[1] = 1\nprint(a)  # \u200b\u8f93\u51fa\u200b[1, 2, [5, 4]]\nprint(b)  # \u200b\u8f93\u51fa\u200b[1, 1, [5, 4]]\n\nimport copy\n\na = [1, 2, [3, 4]]\nb = copy.deepcopy(a)  # \u200b\u6df1\u200b\u62f7\u8d1d\u200b\nb[2][0] = 5\nb[1] = 1\nprint(a)  # \u200b\u8f93\u51fa\u200b[1, 2, [3, 4]]\nprint(b)  # \u200b\u8f93\u51fa\u200b[1, 1, [5, 4]]\n</code></pre>"},{"location":"python/structure/mutable%26immutable/#_4","title":"\ud83d\udccc \u200b\u63a8\u5bfc\u200b\u5f0f","text":"<p>\u200b\u7528\u4e8e\u200b\u4ece\u200b\u5e8f\u5217\u200b\u6216\u200b\u5176\u4ed6\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200b\u5217\u8868\u200b\u3001\u200b\u96c6\u5408\u200b\u6216\u200b\u5b57\u5178\u200b\u3002</p> <ul> <li>\u200b\u5217\u8868\u200b\u63a8\u5bfc\u200b\u5f0f\u200b\u683c\u5f0f\u200b\u5982\u200b\uff1a<code>[\u200b\u8868\u8fbe\u5f0f\u200b for \u200b\u53d8\u91cf\u200b in \u200b\u5217\u8868\u200b if \u200b\u6761\u4ef6\u200b]</code></li> <li>\u200b\u5b57\u5178\u200b\u63a8\u5bfc\u200b\u5f0f\u200b\u683c\u5f0f\u200b\u5982\u200b\uff1a<code>{\u200b\u8868\u8fbe\u5f0f\u200b1:\u200b\u8868\u8fbe\u5f0f\u200b2 for \u200b\u53d8\u91cf\u200b in \u200b\u5217\u8868\u200b if \u200b\u6761\u4ef6\u200b}</code></li> <li>\u200b\u96c6\u5408\u200b\u63a8\u5bfc\u200b\u5f0f\u200b\u683c\u5f0f\u200b\u5982\u200b\uff1a<code>{\u200b\u8868\u8fbe\u5f0f\u200b for \u200b\u53d8\u91cf\u200b in \u200b\u5217\u8868\u200b if \u200b\u6761\u4ef6\u200b}</code></li> </ul> \u200b\u793a\u4f8b\u200b\u63a8\u5bfc\u200b\u5f0f\u200b\u83b7\u53d6\u200b\u4e24\u4e2a\u200b\u5b57\u5178\u200b\u4e2d\u200b\u5dee\u5f02\u200b\u7684\u200b\u952e\u503c\u200b\u5bf9\u200b <pre><code>ml = [x for x in range(10) if x % 2 == 0]\nprint(ml)  # \u200b\u8f93\u51fa\u200b[0, 2, 4, 6, 8]\n\nmd = {x: x ** 2 for x in range(10) if x % 2 == 0}\nprint(md)  # \u200b\u8f93\u51fa\u200b{0: 0, 2: 4, 4: 16, 6: 36, 8: 64}\n\nms = {x for x in range(10) if x % 2 == 0}\nprint(ms)  # \u200b\u8f93\u51fa\u200b{0, 2, 4, 6, 8}\n</code></pre> <pre><code>def compare_dict(expected: dict, actual: dict) -&gt; list:\n    \"\"\"\n    \u200b\u63a8\u5bfc\u200b\u5f0f\u200b\u83b7\u53d6\u200b\u4e24\u4e2a\u200b\u5b57\u5178\u200b\u4e2d\u200b\u5dee\u5f02\u200b\u7684\u200b\u952e\u503c\u200b\u5bf9\u200b\n    :param expected: \u200b\u9884\u671f\u200b\u7ed3\u679c\u200b\n    :param actual: \u200b\u5b9e\u9645\u200b\u7ed3\u679c\u200b\n    :return: list\n    \"\"\"\n    diff = ['{key}\u200b\u8be5\u200b\u952e\u503c\u200b\u4e0d\u200b\u4e00\u81f4\u200b\uff1a\u200b\u9884\u671f\u200b\u4e3a\u200b{v1}\uff0c\u200b\u5b9e\u9645\u200b\u4e3a\u200b{v2}'.format(key=key, v1=expected[key], v2=actual.get(key))\n            for key in expected if str(expected[key]) != str(actual.get(key))]\n\n    if diff:\n        print(\"\u200b\u6709\u200b\u5982\u4e0b\u200b\u5b57\u200b\u6bb5\u503c\u200b\u4e0d\u200b\u4e00\u81f4\u200b\uff1a\")\n        print('\\n'.join(diff))\n    else:\n        print('\u200b\u5b57\u200b\u6bb5\u503c\u200b\u4e00\u81f4\u200b')\n    return diff\n\n\n# \u200b\u5bf9\u6bd4\u200b\u4e24\u4e2a\u200b\u5b57\u5178\u200b\uff0c\u200b\u5e76\u6253\u5370\u200b\u6709\u200b\u5dee\u5f02\u200b\u7684\u200b\u952e\u503c\u200b\u5bf9\u200b\ndict1 = {'name': '\u200b\u5f20\u4e09\u200b', 'age': '18', 'sex': '\u200b\u7537\u200b'}\ndict5 = {'name': '\u200b\u738b\u4e94\u200b', 'age': 18}\ncompare_dict(dict1, dict5)\n\n# \u200b\u8f93\u51fa\u200b\uff1a\n# \u200b\u6709\u200b\u5982\u4e0b\u200b\u5b57\u200b\u6bb5\u503c\u200b\u4e0d\u200b\u4e00\u81f4\u200b\uff1a\n# name\u200b\u8be5\u200b\u952e\u503c\u200b\u4e0d\u200b\u4e00\u81f4\u200b\uff1a\u200b\u9884\u671f\u200b\u4e3a\u200b\u5f20\u200b\u4e09\u200b\uff0c\u200b\u5b9e\u9645\u200b\u4e3a\u200b\u738b\u4e94\u200b\n# sex\u200b\u8be5\u200b\u952e\u503c\u200b\u4e0d\u200b\u4e00\u81f4\u200b\uff1a\u200b\u9884\u671f\u200b\u4e3a\u200b\u7537\u200b\uff0c\u200b\u5b9e\u9645\u200b\u4e3a\u200bNone\n</code></pre>"},{"location":"python/structure/number/","title":"\u6570\u503c\u200b\u578b","text":"<ul> <li>\u200b\u6574\u578b\u200b\uff08int\uff09\uff1a\u200b\u8868\u793a\u200b\u6574\u6570\u200b\u3002 </li> <li>\u200b\u6d6e\u70b9\u200b\u578b\u200b\uff08float\uff09\uff1a\u200b\u8868\u793a\u200b\u5e26\u6709\u200b\u5c0f\u6570\u200b\u90e8\u5206\u200b\u7684\u200b\u5b9e\u6570\u200b\u3002 </li> <li>\u200b\u590d\u6570\u200b\uff08complex\uff09\uff1a\u200b\u8868\u793a\u200b\u590d\u6570\u200b\uff0c\u200b\u7531\u200b\u5b9e\u90e8\u200b\u548c\u200b\u865a\u90e8\u200b\u7ec4\u6210\u200b\u3002</li> </ul> <pre><code># \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5b9e\u90e8\u200b\u4e3a\u200b3\uff0c\u200b\u865a\u90e8\u200b\u4e3a\u200b4\u200b\u7684\u200b\u590d\u6570\u200b\ndef complex_number():\n    # complex(3, 4)\u200b\u7b49\u4ef7\u200b\u4e8e\u200b3 + 4j\n    complex1 = 3 + 4j\n    complex2 = complex(3, 4)\n    assert complex1 == complex2\n</code></pre>"},{"location":"python/structure/number/#_1","title":"\ud83d\udccc \u200b\u9700\u8981\u200b\u7cbe\u786e\u200b\u8ba1\u7b97\u200b\u65f6","text":"<pre><code># \u200b\u9700\u8981\u200b\u7cbe\u786e\u200b\u8ba1\u7b97\u200b\u7684\u200b\u573a\u666f\u200b\uff0c\u200b\u4f7f\u7528\u200bdecimal\u200b\u6a21\u5757\u200b\u800c\u200b\u4e0d\u662f\u200b\u6d6e\u70b9\u6570\u200b\ndef decimal_calculate():\n    from decimal import Decimal\n    print(12.3 * 0.1)\n    print(Decimal(12.3) * Decimal('0.1'))\n    print(Decimal('12.3') * Decimal('0.1'))\n\n    # \u200b\u8f93\u51fa\u200b\uff1a\n    # 1.2300000000000002\n    # 1.230000000000000071054273576\n    # 1.23\n</code></pre>"},{"location":"python/structure/number/#_2","title":"\ud83d\udccc \u200b\u56db\u820d\u4e94\u5165\u200b\uff0c\u200b\u4fdd\u7559\u200b\u4e24\u4f4d\u200b\u5c0f\u6570","text":"<pre><code>def round_format():\n    str1 = 3.7477926\n    str2 = '{:.2f}'.format(str1)\n    print(str2)  # \u200b\u8f93\u51fa\u200b3.75\n    str2 = round(str1, 2)\n    print(str2)  # \u200b\u8f93\u51fa\u200b3.75\n\n    str1 = 3.00\n    print('{:.2f}'.format(str1))  # \u200b\u8f93\u51fa\u200b3.00\n    print(round(str1, 2))  # \u200b\u8f93\u51fa\u200b3.0\n</code></pre>"},{"location":"python/structure/sequence/","title":"\u5e8f\u5217","text":"<p>\u200b\u5e8f\u5217\u200b\uff1a\u200b\u5177\u5907\u200b\u5148\u540e\u987a\u5e8f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5305\u542b\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b\uff0c\u200b\u901a\u8fc7\u200b\u5e8f\u53f7\u200b\u8bbf\u95ee\u200b\u3002</p>"},{"location":"python/structure/sequence/#list","title":"\ud83d\udccc \u200b\u5217\u8868\u200blist","text":"<p>\u200b\u53ef\u53d8\u200b\u5e8f\u5217\u200b\uff0c\u200b\u521b\u5efa\u200b\u540e\u200b\u53ef\u200b\u4fee\u6539\u200b\u5185\u90e8\u200b\u5143\u7d20\u200b\u3002\u200b\u5728\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\u4e0a\u200b\uff0c\u201c\u200b\u4fee\u6539\u200b\u201d\u200b\u64cd\u4f5c\u200b\u76f4\u63a5\u200b\u4f5c\u7528\u200b\u4e8e\u200b\u539f\u6709\u200b\u7684\u200b\u5185\u5b58\u7a7a\u95f4\u200b\uff0c\u200b\u65e0\u9700\u200b\u5206\u914d\u200b\u65b0\u200b\u7684\u200b\u5185\u5b58\u200b\u3002</p>"},{"location":"python/structure/sequence/#_1","title":"\ud83d\ude81 \u200b\u5217\u8868\u200b\u6269\u5145\u200b\u65b9\u5f0f","text":"\u65b9\u5f0f\u200b \u200b\u8865\u5145\u200b\u8bf4\u660e\u200b <code>list1.append('999')</code> \u200b\u5c3e\u90e8\u200b\u8ffd\u52a0\u200b <code>list1.extend(['666','0'])</code> \u200b\u5217\u8868\u200b\u62fc\u63a5\u200b +\u200b\u6216\u8005\u200b+= \u200b\u7c7b\u4f3c\u200bextend <code>insert(0,'666')</code> \u200b\u5728\u200b\u7d22\u5f15\u200b\u4f4d\u7f6e\u200b\u63d2\u5165\u200b\u5217\u8868\u200b\u9879"},{"location":"python/structure/sequence/#_2","title":"\ud83d\ude81 \u200b\u5217\u8868\u200b\u5e38\u7528\u200b\u65b9\u6cd5","text":"\u65b9\u6cd5\u200b \u200b\u8865\u5145\u200b\u8bf4\u660e\u200b <code>list1[-1]</code> \u200b\u8fd4\u56de\u200b\u5217\u8868\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b <code>list1.remove('5')</code> \u200b\u5220\u9664\u200b\u5217\u8868\u200b\u4e2d\u200b\u7b2c\u4e00\u4e2a\u200b'5'\uff0c\u200b\u65e0\u200b\u8fd4\u56de\u503c\u200b\uff1b\u200b\u627e\u200b\u4e0d\u5230\u200b\u8be5\u503c\u200b\u65f6\u62a5\u200bValueError <code>list1.sort()</code> \u200b\u65e0\u200b\u8fd4\u56de\u503c\u200b\uff0c\u200b\u76f4\u63a5\u200b\u5728\u200b\u5217\u8868\u200b\u8fdb\u884c\u200b\u5192\u6ce1\u6392\u5e8f\u200b <code>members = [0] * 10000</code> \u200b\u5efa\u5b9a\u200b\u957f\u200b\u7684\u200b\u5217\u8868"},{"location":"python/structure/sequence/#_3","title":"\ud83d\ude81 \u200b\u5217\u8868\u200b\u904d\u5386\u200b\u65b9\u5f0f","text":"\u76f4\u63a5\u200b\u904d\u5386\u200b\u6309\u200b\u7d22\u5f15\u200b\u904d\u5386\u200b\u6309\u200b\u4e0b\u6807\u200b\u904d\u5386\u200b <pre><code># \u200b\u76f4\u63a5\u200b\u904d\u5386\u200b\uff0c\u200b\u5b9e\u9645\u200b\u65f6\u200b\u6309\u200b`\u200b\u7d22\u5f15\u200b + 1`\u200b\u904d\u5386\u200b\nlist1 = [1, 24, 34]\nfor item in list1:\n    print(item)\n</code></pre> <pre><code>list1 = [1, 24, 34]\nfor i in enumerate(list1):\n    print(i)  # \u200b\u8f93\u51fa\u200b\uff1a(0, 1)\uff0c\u200b\u5373\u200b(\u200b\u7d22\u5f15\u200b\uff0c\u200b\u503c\u200b)\n# \u200b\u6216\u8005\u200b\nfor i, x in enumerate(list1):\n    print(i, x)  # \u200b\u8f93\u51fa\u200b\uff1a0 1\n</code></pre> <pre><code># \u200b\u6309\u200b\u4e0b\u6807\u200b\u904d\u5386\u200b\uff0c\u200b\u4e0d\u200b\u89c4\u8303\u200b\u4e0d\u200b\u63a8\u8350\u200b\nlist1 = [1, 24, 34]\nfor i in range(len(list1)):\n    print(list1[i])\n</code></pre>"},{"location":"python/structure/sequence/#tuple","title":"\ud83d\udccc \u200b\u5143\u7ec4\u200btuple","text":"<p>\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u5e8f\u5217\u200b\uff0c\u200b\u521b\u5efa\u200b\u540e\u200b\u4e0d\u80fd\u200b\u4fee\u6539\u200b\u5185\u90e8\u200b\u5143\u7d20\u200b\u3002\u200b\u5728\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\u4e0a\u200b\uff0c\u201c\u200b\u4fee\u6539\u200b\u201d\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b\u521b\u5efa\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u5f15\u7528\u200b\u6307\u5411\u200b\u65b0\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u800c\u539f\u200b\u5bf9\u8c61\u200b\u4fdd\u6301\u200b\u4e0d\u53d8\u200b\u3002</p> <ul> <li>\u200b\u9700\u8981\u200b\u5220\u9664\u200b\u5143\u7d20\u200b\u65f6\u200b\uff0c\u200b\u53ef\u200b\u5229\u7528\u200b\u5207\u7247\u200b\u7684\u200b\u65b9\u5f0f\u200b\u62c6\u5206\u200b\uff0c\u200b\u7528\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b+\u200b\u6307\u5411\u200b\u65b0\u200b\u5143\u7956\u200b\u3002</li> <li>\u200b\u53ea\u6709\u200b1\u200b\u4e2a\u200b\u5143\u7d20\u200b\u65f6\u200b\u9700\u8981\u200b\u9017\u53f7\u200b\u5982\u200b<code>('xx',)</code></li> </ul> <pre><code>tup = (1, 2, 3, 4)\n# \u200b\u4f7f\u7528\u200b\u5207\u7247\u200b\u548c\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\u6765\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u5143\u7ec4\u200b\nnew_tup = tup[:1] + tup[2:]\nprint(new_tup)  # \u200b\u8f93\u51fa\u200b\uff1a(1, 3, 4)\n</code></pre>"},{"location":"python/structure/sequence/#str","title":"\ud83d\udccc \u200b\u5b57\u7b26\u4e32\u200bstr","text":"<p>\u200b\u7279\u6b8a\u200b\u7684\u200b\u5e8f\u5217\u200b\uff0c\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u3002</p>"},{"location":"python/structure/sequence/#_4","title":"\ud83d\ude81 \u200b\u5b57\u7b26\u4e32\u200b\u62fc\u63a5\u200b\u7684\u200b\u65b9\u5f0f","text":"<p>\u200b\u5927\u91cf\u200b\u5b57\u7b26\u4e32\u200b\u5408\u5e76\u200b\uff0c\u200b\u4e14\u200b\u6027\u80fd\u200b\u654f\u611f\u200b\u65f6\u200b\uff1a</p> <ul> <li> <p>\u200b\u8ffd\u6c42\u200b\u65f6\u95f4\u200b\uff0c\u200b\u4f18\u5148\u9009\u62e9\u200blist.append + str.join(Iterable)\u200b\u7684\u200b\u65b9\u5f0f\u200b</p> </li> <li> <p>\u200b\u8ffd\u6c42\u200b\u5185\u5b58\u200b\u4f7f\u7528\u200b\u5c11\u200b\uff0c\u200b\u4f18\u5148\u200b\u8003\u8651\u200b+,+=</p> </li> </ul> <p>\u200b\u5c11\u91cf\u200b\u5b57\u7b26\u4e32\u200b\u5408\u5e76\u200b\u6216\u200b\u6027\u80fd\u200b\u4e0d\u200b\u654f\u611f\u200b\u7684\u200b\u573a\u666f\u200b\u4ee5\u200b\u53ef\u8bfb\u6027\u200b\u4f18\u5148\u200b\u3002</p> \u200b\u65b9\u5f0f\u200b \u200b\u8865\u5145\u200b\u8bf4\u660e\u200b <code>'Hello {text}'.format(text='World')</code> \u200b\u4e0d\u200b\u53d7\u200b\u4fe1\u4efb\u200b\u7684\u200b\u5916\u90e8\u200b\u6570\u636e\u200b\u7981\u7528\u200b <code>f'Hello {\u200b\u5c40\u90e8\u53d8\u91cf\u200b\u540d\u200b}'</code> \u200b\u4e0e\u200bformat\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u53ef\u8bfb\u6027\u200b\u8f83\u200b\u9ad8\u200b +\u200b\u6216\u8005\u200b+= \u200b\u901a\u8fc7\u200b\u52a0\u53f7\u200b\u62fc\u63a5\u200b\uff0c\u200b\u8ffd\u6c42\u200b\u5185\u5b58\u200b\u4f7f\u7528\u200b\u5c11\u65f6\u200b\u4f18\u5148\u200b\u8003\u8651\u200b <code>'&amp;'.join(str)</code> \u200b\u5728\u200bstr\u200b\u5404\u200b\u5b57\u7b26\u200b\u95f4\u200b\u63d2\u5165\u200b'&amp;'\u200b\u7b26\u53f7\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u5c06\u200b\u5217\u8868\u200b\u8f6c\u4e3a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u65b9\u5f0f\u200b\u4e4b\u4e00\u200b <code>print('%10s' % str)</code> \u200b\u7c7b\u4f3c\u200bC\u200b\u8bed\u8a00\u200b\u7684\u200b%\u200b\u65b9\u5f0f\u200b\uff0c%10s\u200b\u683c\u5f0f\u5316\u200b\u5de6\u200b\u5bf9\u9f50\u200b\uff0c10\u200b\u4e2a\u5b57\u7b26\u200b\uff0c\u200b\u4e0d\u8db3\u200b\u65f6\u200b\u7a7a\u683c\u200b\u8865\u5168\u200b <code>from string import Template</code> \u200b\u9762\u5411\u5bf9\u8c61\u200b\u7684\u200b\u6a21\u677f\u200b\u62fc\u63a5\u200b <pre><code># ','.join()\u200b\u7684\u200b\u4f20\u200b\u53c2\u975e\u200bstr\u200b\u7c7b\u578b\u200b\u65f6\u200b\u629b\u200bTypeError\ntry:\n    list2 = [1, 2, 3]\n    str2 = ','.join(list2)\nexcept TypeError as e:\n    print(e)  # \u200b\u8f93\u51fa\u200b\uff1asequence item 0: expected str instance, int found\n    str2 = ','.join(map(str, list2))  # \u200b\u5148\u200b\u5c06\u200blist2\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u5e94\u7528\u200bstr()\u200b\u51fd\u6570\u200b\nelse:\n    print('pass')\nfinally:\n    print(str2)  # \u200b\u8f93\u51fa\u200b\uff1a1,2,3\n</code></pre>"},{"location":"python/structure/sequence/#_5","title":"\ud83d\ude81 \u200b\u5b57\u7b26\u4e32\u200b\u6bd4\u8f83","text":"<p>Python\u200b\u5b57\u7b26\u4e32\u200b\u6bd4\u8f83\u200b\u5927\u5c0f\u200b\u7684\u200b\u539f\u5219\u200b\u662f\u200b\u4ece\u5de6\u5230\u53f3\u200b\u4f9d\u6b21\u200b\u6bd4\u8f83\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u5b57\u7b26\u200b\u7684\u200bUnicode\u200b\u503c\u200b\uff0c\u200b\u5982\u679c\u200b\u9047\u5230\u200b\u76f8\u540c\u200b\u5b57\u7b26\u200b\uff0c\u200b\u7ee7\u7eed\u200b\u6bd4\u8f83\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u200b\u3002</p> <p>\u200b\u6240\u4ee5\u200b\u76f4\u63a5\u200b\u6bd4\u8f83\u200b\u53ef\u80fd\u200b\u51fa\u73b0\u200b\"3.11.0\" &lt; \"3.6.0\"\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u5982\u4e0b\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>version = '3.8.0'\nprint(version &lt; \"3.6.0\")  # \u200b\u8f93\u51fa\u200b\uff1aFalse\nversion = '3.11.0'\nprint(version &lt; \"3.6.0\")  # \u200b\u8f93\u51fa\u200b\uff1aTrue\n\nfrom packaging import version  # \u200b\u4f7f\u7528\u200b\u7b2c\u4e09\u65b9\u200b\u5e93\u200b\u6bd4\u8f83\u200b\u7248\u672c\u53f7\u200b\n\nver = '3.11.0'\nprint(version.parse(ver) &lt; version.parse(\"3.6.0\"))\n</code></pre>"},{"location":"python/structure/sequence/#_6","title":"\ud83d\ude81 \u200b\u5b57\u7b26\u4e32\u200b\u5e38\u7528\u200b\u65b9\u6cd5","text":"\u65b9\u6cd5\u200b \u200b\u8bf4\u660e\u200b <code>str1.strip()</code> \u200b\u53bb\u9664\u200b\u9996\u5c3e\u200b\u7a7a\u683c\u200b <code>str1.split()</code> \u200b\u8f93\u5165\u200b\u5185\u5bb9\u200b\u4f5c\u4e3a\u200b\u5206\u9694\u7b26\u200b\uff0c\u200b\u8fd4\u56de\u200b\u5217\u8868\u200b\uff1b\u200b\u9ed8\u8ba4\u200b\u5206\u9694\u7b26\u200b\u4e3a\u200b\u7a7a\u683c\u200b <code>str1.replace()</code> \u200b\u5b57\u7b26\u4e32\u200b\u66ff\u6362\u200b\uff0c\u200b\u6b64\u5904\u200b\u662f\u200b\u4e2d\u6587\u200b\u62ec\u53f7\u200b\u66ff\u6362\u6210\u200b\u82f1\u6587\u200b\u7b26\u53f7\u200b <code>str1.upper()</code> \u200b\u8fd4\u56de\u200b\u5927\u5199\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u8f6c\u200b\u5c0f\u5199\u200b\u7684\u200b\u662f\u200bstr1.lower()"},{"location":"python/structure/sequence/#_7","title":"\ud83d\udccc \u200b\u5207\u7247","text":"<p>\u200b\u5b8c\u6574\u200b\u7684\u200b\u5207\u7247\u200b\u8868\u8fbe\u5f0f\u200b\u4e3a\u200b<code>[start:end:step]</code>\uff0c\u200b\u5176\u4e2d\u200b<code>start</code>\u200b\u548c\u200b<code>end</code>\u200b\u90fd\u200b\u662f\u200b\u53ef\u9009\u200b\u7684\u200b\uff0c\u200b\u9ed8\u8ba4\u503c\u200b\u4e3a\u200b<code>0</code>\u200b\u548c\u200b<code>len(obj)</code>\uff0c<code>step</code>\u200b\u9ed8\u8ba4\u503c\u200b\u4e3a\u200b<code>1</code>\u3002</p> \u200b\u8868\u8fbe\u5f0f\u200b \u200b\u8bf4\u660e\u200b <code>str[i: j]</code> \u200b\u8fd4\u56de\u200b\u5b57\u7b26\u4e32\u200bstr\u200b\u7b2c\u200bi\u200b\u5230\u200bj\u200b\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u5b50\u200b\u5e8f\u5217\u200b\uff08\u200b\u4e0d\u200b\u5305\u542b\u200b\u7b2c\u200bj\u200b\u4e2a\u200b\u5143\u7d20\u200b\uff09\uff0c\u200b\u5f53\u200b\u5207\u7247\u200b\u8d85\u8fc7\u200b\u957f\u5ea6\u200b\u65f6\u200b\u7ed3\u679c\u200b\u4e3a\u7a7a\u200b <code>str[:-1]</code> \u200b\u8fd4\u56de\u200b\u7d22\u5f15\u200b0\u200b\u81f3\u200b\u7d22\u5f15\u200b-1\uff0c\u200b\u76f8\u5f53\u4e8e\u200b\u53bb\u6389\u200b\u6700\u540e\u200b\u4e00\u4f4d\u200b <code>str[::-1]</code> \u200b\u8fd4\u56de\u200b\u5012\u5e8f\u200b\u7684\u200bstr"},{"location":"python/unittest/unittest_notes/","title":"unittest\u200b\u7b14\u8bb0","text":""},{"location":"python/unittest/unittest_notes/#_1","title":"\ud83d\ude81 \u200b\u81ea\u5b9a\u4e49\u200b\u6d4b\u8bd5\u200b\u5957\u4ef6","text":"<pre><code>\"\"\"\nsuite.addTest(case)  # \u200b\u5355\u4e2a\u200b\u7528\u4f8b\u200b\u52a0\u8f7d\u200b\u5230\u200b\u5957\u4ef6\u200b\nsuite.addTest(loader.loadTestsFromTestCase(TestCaseDemo))  # \u200b\u7528\u200b\u4f8b\u7c7b\u200b\u52a0\u8f7d\u200b\u5230\u200b\u5957\u4ef6\u200b\nsuite.addTest(loader.loadTestsFromModule(testcase))  # \u200b\u7528\u4f8b\u200b\u6a21\u5757\u200b(.py)\u200b\u52a0\u8f7d\u200b\u5230\u200b\u5957\u4ef6\u200b\nsuite.addTest(loader.discover(case_path, pattern='testcase*.py'))  # \u200b\u6307\u5b9a\u200b\u8def\u5f84\u200b\u52a0\u8f7d\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u52a0\u8f7d\u200b\u8be5\u200b\u8def\u5f84\u200b\u4e0b\u200b\u6240\u6709\u200btest\u200b\u5f00\u5934\u200b\u7684\u200b\u7528\u4f8b\u200b\n\"\"\"\n</code></pre>"},{"location":"python/unittest/unittest_notes/#_2","title":"\ud83d\ude81 \u200b\u65ad\u8a00","text":"<p><code>assertEqual</code>  # \u200b\u6bd4\u8f83\u200b\u7684\u200b\u662f\u200b\u4e24\u4e2a\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5185\u5bb9\u200b</p> <p><code>assertIs</code>  # \u200b\u6bd4\u8f83\u200b\u7684\u200b\u662f\u200b\u4e24\u4e2a\u200b\u5bf9\u8c61\u200b\u7684\u200b\u6307\u5411\u200b\u5730\u5740\u200b</p> <p><code>assertTrue</code>  # \u200b\u65ad\u8a00\u200b\u662f\u5426\u200b\u4e3a\u200bTrue</p>"},{"location":"python/unittest/unittest_notes/#unittestmain","title":"\ud83d\ude81 unittest.main()","text":"<p><code>unittest.main(verbosity=2)</code></p> <p><code>verbosity</code>\u200b\u53c2\u6570\u200b\u8868\u793a\u200b\u8f93\u51fa\u200b\u7684\u200b\u8be6\u7ec6\u200b\u7a0b\u5ea6\u200b\uff1a</p> <p>0-\u200b\u4e0d\u200b\u8f93\u51fa\u200b\uff1b</p> <p>1-\u200b\u8f93\u51fa\u200b\u6bcf\u4e2a\u200b\u7528\u4f8b\u200b\u6267\u884c\u200b\u7ed3\u679c\u200b\uff1b</p> <p>2-\u200b\u8f93\u51fa\u200b\u6bcf\u4e2a\u200b\u7528\u4f8b\u200b\u6267\u884c\u200b\u7ed3\u679c\u200b\u3001\u200b\u8be6\u7ec6\u200b\u7684\u200b\u9519\u8bef\u4fe1\u606f\u200b\u53ca\u200b\u6267\u884c\u200b\u65f6\u95f4\u200b\u7b49\u200b</p> <p>\u200b\u53c2\u8003\u8d44\u6599\u200b\uff1aunittest-\u200b\u5355\u5143\u6d4b\u8bd5\u200b\u6846\u67b6\u200b</p> <p>https://www.cnblogs.com/daxiong2014/p/10449184.html</p>"},{"location":"sql/redis_notes/","title":"Redis\u200b\u7b14\u8bb0","text":"<ul> <li>\u200b\u975e\u200b\u5173\u7cfb\u200b\u578b\u200b\u6570\u636e\u5e93\u200b\uff0c\u200b\u4f5c\u4e3a\u200b\u5173\u7cfb\u200b\u578b\u200b\u6570\u636e\u5e93\u200b\u7684\u200b\u8865\u5145\u200b\uff0c\u200b\u4f7f\u7528\u200b\u952e\u503c\u200b\u5bf9\u200b\u5b58\u50a8\u200b\u6570\u636e\u200b\u3002</li> <li>\u200b\u964d\u4f4e\u200b\u78c1\u76d8\u200bIO\uff0c\u200b\u5185\u5b58\u200b\u5b58\u50a8\u200b\u3002</li> <li>\u200b\u5e7f\u6cdb\u200b\u7528\u4e8e\u200b\u7f13\u5b58\u200b\u3001\u200b\u6d88\u606f\u200b\u961f\u5217\u200b\u3001\u200b\u6392\u884c\u699c\u200b\u7b49\u200b\u573a\u666f\u200b\u3002</li> </ul>"},{"location":"sql/redis_notes/#redis","title":"Redis\u200b\u5e38\u7528\u200b\u6307\u4ee4","text":"<p>\u200b\u8fde\u63a5\u200b\u5230\u200b\u8fdc\u7a0b\u200bRedis\u200b\u670d\u52a1\u5668\u200b\uff1a<code>./redis-cli -h ip -p port -a password</code></p> \u200b\u6307\u4ee4\u200b \u200b\u8bf4\u660e\u200b keys * \u200b\u67e5\u770b\u200b\u6240\u6709\u200b\u7684\u200b\u952e\u200b dbsize \u200b\u952e\u200b\u603b\u6570\u200b exists key \u200b\u68c0\u67e5\u200b\u952e\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\u3002\u200b\u5b58\u5728\u200b\uff1a1\uff0c\u200b\u4e0d\u200b\u5b58\u5728\u200b\uff1a0 del key \u200b\u5220\u9664\u200b\u952e\u200b\u3002\u200b\u5220\u9664\u200b\u6210\u529f\u200b\uff1a1\uff0c\u200b\u5220\u9664\u200b\u5931\u8d25\u200b\uff1a0 type key \u200b\u952e\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\u7c7b\u578b\u200b rename key newkey \u200b\u91cd\u547d\u540d\u200b\u952e\u200b set key value \u200b\u8bbe\u7f6e\u200b\u503c\u200b get key \u200b\u4e28\u200b\u83b7\u53d6\u200b\u5bf9\u5e94\u200b\u952e\u200b\u7684\u200b\u503c\u200b flushdb \u200b\u6e05\u9664\u200b\u5f53\u524d\u200b\u6570\u636e\u5e93\u200b flushall \u200b\u6e05\u9664\u200b\u6240\u6709\u200b\u6570\u636e\u5e93\u200b info memory \u200b\u67e5\u8be2\u200b\u5185\u5b58\u200b\u4f7f\u7528\u200b\u60c5\u51b5\u200b <p>\u200b\u6e05\u9664\u200b\u6307\u5b9a\u200bredis\uff1a<code>for i in $(seq 1001 1003)\uff1a do echo \"flushab\" | ./redis-cli -h ip -a password -p $i; done</code></p>"},{"location":"sql/oracle/gather_table_stats/","title":"\u6536\u96c6\u200b\u8868\u200b\u7edf\u8ba1\u200b\u4fe1\u606f","text":""},{"location":"sql/oracle/gather_table_stats/#_2","title":"\u5206\u533a\u8868\u200b\u7edf\u8ba1\u200b\u6536\u96c6","text":"<pre><code>execute dbms_stats.gather_table_stats(ownname =&gt; '{ownname}', tabname =&gt; '{tabname}', \npartname =&gt; '{partname}', estimate_percent =&gt; null, method_opt =&gt; 'for all indexed columns', \ncascade =&gt; true, degree =&gt; 45);\n\n--estimate_percent =&gt; null: \u200b\u8868\u793a\u200bOracle\u200b\u5c06\u200b\u81ea\u52a8\u200b\u51b3\u5b9a\u200b\u91c7\u6837\u7387\u200b\u3002\n--method_opt =&gt; 'for all indexed columns': \u200b\u610f\u5473\u7740\u200b\u5bf9\u200b\u6240\u6709\u200b\u5df2\u200b\u7d22\u5f15\u200b\u7684\u200b\u5217\u200b\u8fdb\u884c\u200b\u76f4\u65b9\u56fe\u200b\u6536\u96c6\u200b\u3002\n--cascade =&gt; true: \u200b\u81ea\u52a8\u200b\u6536\u96c6\u200b\u4f9d\u8d56\u4e8e\u200b\u8be5\u8868\u200b\u7684\u200b\u6240\u6709\u200b\u76f8\u5173\u200b\u5bf9\u8c61\u200b\uff08\u200b\u5982\u200b\u7d22\u5f15\u200b\u3001\u200b\u7ea6\u675f\u200b\u7b49\u200b\uff09\u200b\u7684\u200b\u7edf\u8ba1\u200b\u4fe1\u606f\u200b\u3002\n--degree =&gt; 45: \u200b\u6536\u96c6\u200b\u7edf\u8ba1\u200b\u4fe1\u606f\u200b\u65f6\u200b\u4f7f\u7528\u200b\u7684\u200b\u8fdb\u7a0b\u200b\u6570\u200b\u3002\n</code></pre> <p>\u200b\u8865\u5145\u200b</p> <p>\u200b\u65e0\u200b\u5206\u533a\u200b\u7684\u200b\u8868\u5219\u200b\u53bb\u6389\u200b<code>partname =&gt; '{partname}'</code>\u200b\u53c2\u6570\u200b</p>"},{"location":"sql/oracle/lock%26unlock/","title":"\u67e5\u8be2\u200b\u9501\u8868\u200b&amp;\u200b\u89e3\u9501","text":"<ol> <li> <p>\u200b\u67e5\u770b\u200b\u5f53\u524d\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u7684\u200b\u9501\u8868\u200b\u60c5\u51b5\u200b\uff0c\u200b\u6ca1\u6709\u200b\u6570\u636e\u200b\u5373\u200b\u6ca1\u9501\u8868\u200b</p> <p><code>SELECT * FROM V$LOCKED_OBJECT;</code></p> </li> <li> <p>\u200b\u627e\u200bSESSION_ID\u200b\u5bf9\u5e94\u200b\u7684\u200bSERIAL#</p> <p><code>SELECT * FROM V$SESSION WHERE SID = '{SESSION_ID}';</code></p> </li> <li> <p>\u200b\u5220\u9664\u200bSESSION_ID\u200b\u53ca\u5176\u200bSERIAL#\u200b\u4ee5\u200b\u89e3\u9501\u200b</p> <p><code>ALTER SYSTEM KILL SESSION '79,51107';</code></p> </li> </ol> <p>\u200b\u4e0a\u8ff0\u200b\u6b65\u9aa4\u200b\u7ec4\u5408\u200b\u8d77\u6765\u200b <pre><code>DECLARE\n    V_SQL VARHCAR2(2000);\n    CURSOR i is SELECT SID||','||SERIAL# tmp_SESSION FROM V$SESSION \n    WHERE SID IN (SELECT SESSION_ID FROM V$LOCKED_OBJECT);\nBEGIN\n    FOR TEMP IN i LOOP\n        --''''\uff1a\u200b\u5916\u90e8\u200b\u7684\u200b\u5355\u5f15\u53f7\u200b\u5305\u542b\u200b\u7684\u200b\u5185\u5bb9\u200b\u8868\u793a\u200b\u9700\u8981\u200b\u62fc\u63a5\u200b\u7684\u200b\u5185\u5bb9\u200b\uff0c\u200b\u4e2d\u95f4\u200b\u4e24\u4e2a\u200b\u5355\u5f15\u53f7\u200b\u4ee3\u8868\u200b\u5355\u5f15\u53f7\u200b\u8f6c\u4e49\u5b57\u7b26\u200b\n        V_SQL := ALTER SYSTEM KILL SESSION ''''||TEMP.tmp_SESSION||'''' ; EXECUTE IMMEDIATE V_SQL;\n    END LOOP;\n    DBMS_OUTPUT.PUT_LINE(V_SQL);\nEND;\n</code></pre></p> <p>\u200b\u8865\u5145\u200b</p> <pre><code>--\u200b\u67e5\u770b\u200b\u6570\u636e\u5e93\u200b\u5f15\u8d77\u200b\u9501\u8868\u200b\u7684\u200bSQL\u200b\u8bed\u53e5\u200b \nSELECT A.USERNAME, A.MACHINE, A.PROGRAM, A.SID, A.SERIAL#, A.STATUS, C.PIECE, C.SQL_TEXT \n    FROM V$SESSION A, V$SQLTEXT C\n    WHERE A.SID IN (SELECT DISTINCT T2.SID FROM V$LOCKED_OBJECT T1, V$SESSION T2 WHERE T1.SESSION_ID = T2.SID)\n    AND A.SQL_ADDRESS = C.ADDRESS(+) ORDER BY C.PIECE;\n</code></pre>"},{"location":"sql/oracle/other_notes/","title":"\u5176\u4ed6\u200b\u7b14\u8bb0","text":""},{"location":"sql/oracle/other_notes/#number","title":"\ud83d\ude81 NUMBER\u200b\u7c7b\u578b","text":"<p>Oracle\u200b\u7684\u200bnumber\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4e3a\u200b\u8282\u7701\u200b\u7a7a\u95f4\u200b\u4f1a\u200b\u7701\u7565\u200b\u6389\u200b\u524d\u9762\u200b\u7684\u200b0\uff0c\u200b\u5982\u200b0.9\u200b\u4f1a\u4ee5\u200b.9\u200b\u5c55\u793a\u200b\u3002</p> <p>\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u6ce8\u610f\u200bnumber\u200b\u7c7b\u578b\u200b\u548c\u200bvarchar\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u540e\u200b\u7684\u200b\u6570\u503c\u200b\u662f\u5426\u200b\u6b63\u786e\u200b\u3002</p>"},{"location":"sql/oracle/other_notes/#_2","title":"\ud83d\ude81 \u200b\u5b57\u200b\u6bb5\u200b\u622a\u53d6","text":"\u547d\u4ee4\u200b \u200b\u8bf4\u660e\u200b <code>SUBSTR(CREATEDATE_STR, 1, 6)</code> \u200b\u622a\u53d6\u200bCREATEDATE_STR\u200b\u7684\u200b\u524d\u200b6\u200b\u4e2a\u5b57\u7b26\u200b <code>SUBSTRING(CREATEDATE_STR, 1, 6)</code> \u200b\u540c\u200b\u4e0a\u200b\uff0c\u200b\u4f46\u662f\u200bHiveSQL <code>TRUNC(sysdate)</code> \u200b\u9ed8\u8ba4\u200b\u622a\u53d6\u200b\u7cfb\u7edf\u200b\u65e5\u671f\u200b\u5230\u200b\u65e5\u200b\uff0c\u200b\u5373\u200byyyy-mm-dd"},{"location":"sql/oracle/other_notes/#_3","title":"\ud83d\ude81 \u200b\u7c7b\u4f3c\u200b\u5224\u5b9a\u200b\u8bed\u53e5","text":"CASE WHENDECODE <pre><code>--WHEN\u200b\u53ef\u4ee5\u200b\u6709\u200b\u591a\u4e2a\u200b\nCASE WHEN C.CREATEDATE IS NOT NULL THEN C.CREATEDATE \n     ELSE SYSDATE END CREATEDATE\n</code></pre> <pre><code>--\u200b\u4e0e\u200bCASE WHEN\u200b\u5355\u4e2a\u200b\u5224\u5b9a\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u82e5\u200bEXPRESSION = VALUE\uff0c\u200b\u5219\u200b\u53d6\u200bRESULT1\uff0c\u200b\u5426\u5219\u200b\u53d6\u200bRESULT2\nDECODE(EXPRESSION, VALUE, RESULT1, RESULT2)\n</code></pre>"},{"location":"sql/oracle/other_notes/#_4","title":"\ud83d\ude81 \u200b\u52a0\u5b57\u200b\u6bb5\u200b\u65f6\u200b\u975e\u7a7a\u53ca\u200b\u9ed8\u8ba4\u503c","text":"<pre><code>ALTER TABLE TABLE_NAME ADD COLUMN VARCHAR2(32) DEFAULT '10001' NOT NULL; \n</code></pre>"},{"location":"sql/oracle/other_notes/#having","title":"\ud83d\ude81 HAVING\u200b\u5b50\u200b\u67e5\u8be2","text":"<pre><code>--HAVING\u200b\u5b50\u200b\u67e5\u8be2\u200b\uff0c\u200b\u642d\u914d\u200b\u5206\u7ec4\u200b\u51fd\u6570\u200b\u4f7f\u7528\u200b\nSELECT AGENTID, CYCLE, REGION, COUNT(1) FROM COMMON.AGENT WHERE CYCLE BETWEEN 201801 AND 202301 \n    AND REGION IN (759, 999) GROUP BY AGENTID, CYCLE, REGION HAVING COUNT(1) &gt; 1;\n</code></pre>"},{"location":"sql/oracle/other_notes/#1","title":"\ud83d\ude81 \u200b\u67d0\u4e2a\u200b\u6708\u4efd\u200b\u51cf\u200b1","text":"<pre><code>SELECT TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYYMM') FROM DUAL;\n\nSELECT TO_CHAR(ADD_MONTH(TO_DATE('202401','YYYYMM'),-1),'YYYYMM') FROM DUAL;\n</code></pre>"},{"location":"sql/oracle/other_notes/#_5","title":"\ud83d\ude81 \u200b\u65f6\u95f4\u200b\u5012\u5e8f\u200b\u6392\u5e8f","text":"<pre><code>--\u200b\u65f6\u95f4\u200b\u5012\u5e8f\u200b\u6392\u5e8f\u200b\uff0c\u200b\u6700\u65b0\u200b\u7684\u200b\u9760\u200b\u524d\u200b\uff0c\u200b\u7a7a\u200b\u7684\u200b\u9760\u200b\u540e\u200b\nORDER BY CREATEDATE DESC NULLS LAST\n</code></pre>"},{"location":"sql/oracle/other_notes/#print","title":"\ud83d\ude81 PRINT()","text":"<p><code>DBMS_OUTPUT.PUT_LINE('');</code></p>"},{"location":"sql/oracle/other_notes/#_6","title":"\ud83d\ude81 \u200b\u751f\u6210\u200b\u6570\u5b57\u200b\u6216\u200b\u5b57\u7b26\u4e32","text":"<pre><code>--\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b0\u200b\u81f3\u200b1.5\u200b\u5185\u200b\u7684\u200b\u968f\u673a\u200b\u5c0f\u6570\u200b\uff0c\u200b\u6700\u200b\u591a\u200b4\u200b\u4f4d\u200b\u5c0f\u6570\u200b\nROUND(DBMS_RANDOMS.VALUE(0, 1.5), 4)\n\n--\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b10\u200b\u4e2a\u200b\u5927\u5199\u5b57\u6bcd\u200b\u7684\u200b\u968f\u673a\u200b\u5b57\u7b26\u4e32\u200b\nDBMS_RANDOM.STRING('U', 10)\n</code></pre>"},{"location":"sql/oracle/other_notes/#_7","title":"\ud83d\ude81 \u200b\u95ea\u56de\u200b\u673a\u5236","text":"<pre><code>--\u200b\u4ee5\u200bDELETE FROM\u200b\u5220\u9664\u200b\u7684\u200b\u6570\u636e\u200b\u53ef\u200b\u901a\u8fc7\u200bTIMESTAMP\u200b\u65b9\u5f0f\u200b\u627e\u56de\u200b\nSELECT * FROM TABLE_NAME AS OF TIMESTAMP TO_TIMESTAMP('2023-03-30 10:26:11', 'YYYY-MM-DD HH24:MI:SS') \n    WHERE condition;\n</code></pre> <p>\u200b\u8865\u5145\u200b</p> <ul> <li><code>DELETE</code>\u200b\u64cd\u4f5c\u200b\u5c5e\u4e8e\u200bDML\uff0c\u200b\u4f1a\u200b\u89e6\u53d1\u200b\u9501\u200b\uff1b,<code>TRUNCATE</code>\u200b\u64cd\u4f5c\u200b\u5c5e\u4e8e\u200bDDL\uff0c\u200b\u4e0d\u4f1a\u200b\u89e6\u53d1\u200b\u9501\u200b\u3002</li> <li><code>DELETE</code>\u200b\u64cd\u4f5c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200bWHERE\u200b\u5173\u952e\u5b57\u200b\uff0c<code>TRUNCATE</code>\u200b\u64cd\u4f5c\u200b\u4e0d\u200b\u53ef\u4ee5\u200b\u3002</li> <li><code>DELETE</code>\u200b\u64cd\u4f5c\u200b\u4f1a\u200b\u89e6\u53d1\u200b\u89e6\u53d1\u5668\u200b\uff0c<code>TRUNCATE</code>\u200b\u64cd\u4f5c\u200b\u4e0d\u4f1a\u200b\u89e6\u53d1\u200b\u89e6\u53d1\u5668\u200b\u3002</li> <li><code>DELETE</code>\u200b\u64cd\u4f5c\u200b\u4f1a\u200b\u89e6\u53d1\u200b\u7d22\u5f15\u200b\uff0c<code>TRUNCATE</code>\u200b\u64cd\u4f5c\u200b\u4e0d\u4f1a\u200b\u89e6\u53d1\u200b\u7d22\u5f15\u200b\u3002</li> <li>\u200b\u6e05\u7a7a\u200b\u6570\u636e\u91cf\u200b\u8f83\u5927\u200b\u7684\u200b\u8868\u65f6\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>TRUNCATE</code>\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u6548\u7387\u200b\u8f83\u200b\u9ad8\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u8bba\u200b\u54ea\u200b\u79cd\u200b\u5220\u9664\u200b\u64cd\u4f5c\u200b\u90fd\u200b\u9700\u5148\u200b\u505a\u597d\u200b\u5907\u4efd\u200b\u3002</li> </ul>"},{"location":"sql/oracle/other_notes/#_8","title":"\ud83d\ude81 \u200b\u5168\u5916\u200b\u8fde\u63a5\u200b\u548c\u200b\u7b1b\u5361\u5c14\u200b\u79ef","text":"\u8868\u200b\u7ed3\u6784\u200b\u548c\u200b\u9884\u7f6e\u200b\u6570\u636e\u200b\u5168\u5916\u200b\u8fde\u63a5\u200b\u7b1b\u5361\u5c14\u200b\u79ef\u200b <pre><code>-- \u200b\u5047\u8bbe\u200b\u8868\u200b\u7ed3\u6784\u200b\u5982\u4e0b\u200b\uff1a\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(100)\n);\n\nCREATE TABLE scores (\n    student_id INT,\n    subject VARCHAR(50),\n    score NUMBER(5,2)\n);\n\n-- \u200b\u793a\u4f8b\u200b\u6570\u636e\u200b\uff1a\nINSERT INTO students VALUES (1, 'whm1');\nINSERT INTO students VALUES (2, 'whm2');\nINSERT INTO students VALUES (3, 'whm3');\nINSERT INTO scores VALUES (1, 'math', 90.5);\nINSERT INTO scores VALUES (1, 'en', 85.0);\nINSERT INTO scores VALUES (2, 'math', 92.0);\nINSERT INTO scores VALUES (2, 'en', 88.0);\nCOMMIT;\n\n-- \u200b\u67e5\u8be2\u200b\u6bcf\u4e2a\u200b\u5b66\u751f\u200b\u7684\u200b\u5e73\u5747\u200b\u6210\u7ee9\u200b\uff1a\nSELECT s.id, s.name, AVG(sc.score) AS average_score\nFROM students s\nLEFT JOIN scores sc ON s.id = sc.student_id\nGROUP BY s.id, s.name;\n</code></pre> <pre><code>--\u200b\u82e5\u200b\u67d0\u4e2a\u200b\u8bb0\u5f55\u200b\u5728\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u8868\u4e2d\u200b\u6ca1\u6709\u200b\u5339\u914d\u200b\u7684\u200b\u8bb0\u5f55\u200b\uff0c\u200b\u5219\u200b\u5728\u200b\u7ed3\u679c\u200b\u4e2d\u200b\u4f7f\u7528\u200b NULL \u200b\u503c\u200b\u3002\nWITH A AS (SELECT ROWNUM AS RN1, T.* FROM scores T where t.subject = 'math') ,\nB AS (SELECT ROWNUM AS RN2, T.* FROM students T )\nSELECT * FROM A FULL OUTER JOIN B ON A.RN1 = B.RN2;\n</code></pre> <pre><code>--\u200b\u5173\u952e\u5b57\u200b\u662f\u200bCROSS JOIN\uff0c\u200b\u53ef\u4ee5\u200b\u5ffd\u7565\u200b\u4e0d\u5199\u200b\n--\u200b\u9996\u5148\u200b\u6267\u884c\u200b\u4e86\u200b\u4e24\u4e2a\u200b\u8868\u200b\u7684\u200b\u7b1b\u5361\u5c14\u200b\u79ef\u200b\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200bWHERE\u200b\u5b50\u53e5\u200b\u8fdb\u884c\u200b\u7b5b\u9009\u200b\u3002\nWITH A AS (SELECT ROWNUM AS RN1, T.* FROM scores T where t.subject = 'math') ,\nB AS (SELECT ROWNUM AS RN2, T.* FROM students T )\nSELECT * FROM A, B WHERE A.RN1 = B.RN2;\n</code></pre> \u200b\u67e5\u8be2\u200b\u7ed3\u679c\u200b \u200b\u5168\u5916\u200b\u8fde\u63a5\u200b\u7b1b\u5361\u5c14\u200b\u79ef\u200b <pre><code>{'RN1': 1, 'STUDENT_ID': 1, 'SUBJECT': 'math', 'SCORE': 90.5, 'RN2': 1, 'ID': 1, 'NAME': 'whm1'}\n{'RN1': 2, 'STUDENT_ID': 2, 'SUBJECT': 'math', 'SCORE': 92.0, 'RN2': 2, 'ID': 2, 'NAME': 'whm2'} \n{'RN1': None, 'STUDENT_ID': None, 'SUBJECT': None, 'SCORE': None, 'RN2': 3, 'ID': 3, 'NAME': 'whm3'}\n</code></pre> <pre><code>--\u200b\u7b1b\u5361\u5c14\u200b\u79ef\u200b\u8fd4\u56de\u200bAB\u200b\u4e24\u4e2a\u200b\u8868\u4e2d\u200b\u6240\u6709\u200b\u53ef\u80fd\u200b\u7684\u200b\u7ec4\u5408\u200b\uff0c\u200b\u4f1a\u200b\u6d6a\u8d39\u200b\u7cfb\u7edf\u8d44\u6e90\u200b\uff0c\u200b\u5e76\u4e14\u200b\u53ef\u80fd\u200b\u5bfc\u81f4\u200b\u6027\u80fd\u200b\u95ee\u9898\u200b\u3002\n{'RN1': 1, 'STUDENT_ID': 1, 'SUBJECT': 'math', 'SCORE': 90.5, 'RN2': 1, 'ID': 1, 'NAME': 'whm1'}\n{'RN1': 2, 'STUDENT_ID': 2, 'SUBJECT': 'math', 'SCORE': 92.0, 'RN2': 2, 'ID': 2, 'NAME': 'whm2'}\n</code></pre>"},{"location":"sql/oracle/procedure/","title":"\u5b58\u50a8\u200b\u8fc7\u7a0b","text":"<pre><code>DECLARE\n    V_MONTH VARCHAR2(20);\n    V_SQL VARHCAR2(2000);\n    V_COUNT NUMBER(8) := 0;\n    CURSOR i is SELECT T.* FROM TABLE_NAME2 WHERE CONDITION;\nBEGIN\n    SELECT TO_CHAR(SYSDATE, 'YYMMDD') INTO V_MONTH FROM DUAL;\n    --\u200b\u4ee5\u8868\u540d\u200b\u62fc\u63a5\u200b\u5f53\u524d\u200b\u65e5\u671f\u200b\u7684\u200b\u65b9\u5f0f\u200b\u5efa\u200b\u5907\u4efd\u200b\u8868\u200b\n    V_SQL := 'CREATE TABLE TABLE_NAME1'||V_MONTH||'AS SELECT FORM TABLE_NAME1'; EXECUTE IMMEDIATE V_SQL;\n\n    FOR TEMP1 IN i LOOP\n        FOR T2 IN (  --\u200b\u67e5\u8be2\u200b\u7ed3\u679c\u200b\u662f\u200b202101\u200b\u5230\u200b202207\n        SELECT TO_CHAR(ADD_MONTHS(TO_DATE('202101', 'YYYYMM'), ROWNUM - 1), 'YYYYMM') MONTH \n            FORM DUAL CONNECT BY ROWNUM &lt;= MONTHS_BETWEEN(TO_DATE('202207', 'YYYYMM'), \n            TO_DATE('202101', 'YYYYMM')) +1 ) LOOP\n            INSERT INTO TABLE_NAME1 SELECT COLUMN1, COLUMN2, T2.MONTH,\n                DECODE(COLUMN3, 'VALUE', 'Y', 'N') FROM TABLE_NAME1' ||V_MONTH;\n            V_COUNT := V_COUNT + 1;\n            IF MOD(V_COUNT, 1000) = 0 THEN  --\u200b\u5165\u5e93\u200b1000\u200b\u6761\u65f6\u200b\u63d0\u4ea4\u200b\u4e00\u6b21\u200b\n                COMMIT;\n            END IF;\n        END LOOP;\n    END LOOP;\n    DBMS_OUTPUT.PUT_LINE('\u200b\u5165\u5e93\u200b\u6570\u76ee\u200b\u4e3a\u200b\uff1a' || V_COUNT);\nEND;\n</code></pre>"},{"location":"sql/oracle/sqlldr_import/","title":"sqlldr\u200b\u5bfc\u5165\u200b\u5927\u91cf\u200b\u6570\u636e","text":"<p>sqlldr\uff1aSQL Loader\u200b\u7684\u200b\u7b80\u5199\u200b\uff0c\u200b\u662f\u200bOracle\u200b\u63d0\u4f9b\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5de5\u5177\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5c06\u200b\u6570\u636e\u200b\u4ece\u200b\u4e00\u4e2a\u200b\u6570\u636e\u5e93\u200b\u5bfc\u5165\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6570\u636e\u5e93\u200b\u3002</p>"},{"location":"sql/oracle/sqlldr_import/#_1","title":"\ud83d\ude81 \u200b\u4f7f\u7528\u200b\u65b9\u6cd5","text":"<pre><code>#!/bin/bash\n# \u200b\u76ee\u6807\u200b\u6570\u636e\u5e93\u200b\u8fde\u63a5\u200b\u4e32\u200b\ntarget_dbstr=\"user/pw@ip:port\"\n# \u200b\u5f85\u200b\u5bfc\u5165\u200b\u7684\u200b\u6570\u636e\u6587\u4ef6\u200b\uff0c\u200b\u683c\u5f0f\u200b\u5982\u200b\uff1axxxx|xx|xxx|x\nfile_name=tablename.txt\n# \u200b\u76ee\u6807\u200b\u8868\u5b57\u200b\u6bb5\u200b\uff0c\u200b\u65e5\u671f\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u9700\u8981\u200b\u8bf4\u660e\u200b\u65e5\u671f\u200b\u683c\u5f0f\u200b\nfield=\"column1, column2, createdate date 'yyyy-mm-dd hh24:mi:ss', memo\"\n\n# \u200b\u5199\u5165\u200bctl\u200b\u6587\u4ef6\u200b\ntable=tablename\ncat &gt; ./${table}.ctl &lt;&lt; EOF\nload data\ninfile \"${file_name}\"\nappend into table ${table}\nfields terminated by '|'\nTRAILING NULLCOLS\n(\n${field}\n)\nEOF\n\nsqlldr userid=${target_dbstr} control=./${table}.ctl log=./${table}.log bad=./${table}.bad\n</code></pre> <p>\u200b\u8865\u5145\u200b\uff1a\u200b\u4f7f\u7528\u200bsqluldr2\u200b\u5bfc\u51fa\u200b\u67e5\u8be2\u200b\u7ed3\u679c\u200b</p> <p># field=\"|\" \u200b\u4ee3\u8868\u200b\u5b57\u200b\u6bb5\u200b\u5206\u9694\u7b26\u200b\u4e3a\u200b\"|\"</p> <p># record=\"\\n\" \u200b\u4ee3\u8868\u200b\u8bb0\u5f55\u200b\u5206\u9694\u7b26\u200b\u4e3a\u200b\u6362\u884c\u7b26\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u8be5\u200b\u53c2\u6570\u200b\u7684\u200b\u9ed8\u8ba4\u503c\u200b</p> <p><code>./sqluldr2 user=\"user/pw\" query=\"select * from table\" head=no field=\"|\" record=\"\\n\" file=\"./tablename.txt\" charset=ZHS16GBK</code></p>"},{"location":"sql/oracle/sqlldr_import/#sqlplusctl","title":"\ud83d\ude81 sqlplus\u200b\u751f\u6210\u200bctl\u200b\u6587\u4ef6","text":"<p>\u200b\u4e0a\u8ff0\u200b\u811a\u672c\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u586b\u5165\u200b\u76ee\u6807\u200b\u8868\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u81f3\u200bfield\u200b\u53d8\u91cf\u200b\uff0c\u200b\u6709\u200b\u591a\u4e2a\u200b\u8868\u8981\u200b\u5bfc\u5165\u200b\u65f6\u200b\u5c31\u200b\u6bd4\u8f83\u200b\u9ebb\u70e6\u200b\u3002\u200b\u53ef\u4ee5\u200b\u7528\u200bsqlplus\u200b\u6765\u200b\u751f\u6210\u200bctl\u200b\u6587\u4ef6\u200b\uff0c\u200b\u7136\u540e\u200b\u7528\u200bsqlldr\u200b\u5bfc\u5165\u200b\u3002</p> make_ctl.shmake_ctl.sql <pre><code>#!/bin/bash\nif [ $# = 0 ] ; then\necho \"\u200b\u4f7f\u7528\u200b\u65b9\u6cd5\u200b\uff1ash make_ctl.sh \u200b\u8868\u540d\u200b\"\nexit;\nfi\ntestdb=\"user/pw@ip:port/db\"\n\n# make_ctl.sql\u200b\u53c2\u6570\u200b\u8bf4\u660e\u200b\n# \u200b\u53c2\u6570\u200b1=\u200b\u76ee\u6807\u200b\u8868\u540d\u200b\n# \u200b\u53c2\u6570\u200b2=truncate|append\u200b\u7b49\u200b\u88c5\u8f7d\u200b\u65b9\u5f0f\u200b\n# \u200b\u53c2\u6570\u200b3=\u200b\u5b57\u200b\u6bb5\u200b\u5206\u9694\u7b26\u200b\nsqlplus ${testdb} @./make_ctl.sql $1 append \"|\"\n\n# APPEND \u200b\u8ffd\u52a0\u200b\n# INSERT \u200b\u9ed8\u8ba4\u503c\u200b\uff0c\u200b\u5982\u679c\u200b\u539f\u5148\u200b\u7684\u200b\u8868\u6709\u200b\u6570\u636e\u200b\uff0csqlloader\u200b\u4f1a\u200b\u505c\u6b62\u200b\n# REPLACE \u200b\u5982\u679c\u200b\u539f\u5148\u200b\u7684\u200b\u8868\u6709\u200b\u6570\u636e\u200b\uff0c\u200b\u539f\u5148\u200b\u7684\u200b\u6570\u636e\u200b\u4f1a\u200b\u5168\u90e8\u200b\u5220\u9664\u200b\n# TRUNCATE \u200b\u548c\u200breplace\u200b\u7684\u200b\u76f8\u540c\u200b\uff0c\u200b\u4f1a\u200b\u7528\u200btruncate\u200b\u8bed\u53e5\u200b\u5220\u9664\u200b\u73b0\u5b58\u200b\u6570\u636e\u200b\n</code></pre> <pre><code>set echo off                                     \nset heading off                                  \nset verify off                                   \nset trim off                                     \nset pages 0                                      \nset concat on                                    \nset lines 300                                    \nset trimspool on                                 \nset trimout on     \n\nspool &amp;1..ctl                                    \nselect 'LOAD DATA'||chr (10)||             \n--       'INFILE '''||lower (table_name)||'.dat '''||\n       '&amp;2 into table '||table_name||chr (10)||     \n--       'Append into table '||table_name||chr (10)||     \n       'FIELDS TERMINATED BY \"&amp;3\"'|| chr (10)||\n       'TRAILING NULLCOLS'||chr (10)||'('        \nfrom   user_tables                                \nwhere  table_name = upper ('&amp;1');                \nselect decode (rownum, 1, '   ', ' , ')||\n       rpad (column_name, 33, ' ')||\n       decode (data_type,\n               'VARCHAR2', 'CHAR('||RTRIM(TO_CHAR(DATA_LENGTH+4)) ||')  NULLIF ('||column_name||'=BLANKS)'||' \"trim(:'||column_name||')\"',\n               'FLOAT',    'DECIMAL EXTERNAL NULLIF('||column_name||'=BLANKS)',\n               'NUMBER',   decode (data_precision, 0,\n                           'INTEGER EXTERNAL NULLIF ('||column_name||\n                           '=BLANKS)', decode (data_scale, 0,\n                           'INTEGER EXTERNAL NULLIF ('||\n                           column_name||'=BLANKS)',\n                           'DECIMAL EXTERNAL NULLIF ('||\n                           column_name||'=BLANKS)')),\n               'DATE',     'DATE \"YYYY-MM-DD\"  NULLIF ('||column_name||'=BLANKS)',\n               null)\nfrom   \n(select * from user_tab_columns\nwhere  table_name = upper ('&amp;1')\norder  by column_id ) t;                           \nselect ')'                                       \nfrom sys.dual;\nspool off \n</code></pre>"}]}